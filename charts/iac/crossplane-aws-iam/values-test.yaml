---
# Note: Keep an alphabetical order, please

global:
#   # 64 chars long to test trimming
#   releaseNameOverride: shah5zieta8cu4ahve9ooy2eix5eeseis6jaecop3nahjae4keizohbeiyoo5sho
  env: team-tier

AccessKey:
  items:
    test:
      forProvider:
        userRef:
          name: test

AccountAlias:
  items:
    test:
      forProvider: {}

AccountPasswordPolicy:
  items:
    test:
      forProvider:
        allowUsersToChangePassword: true
        minimumPasswordLength: 8
        requireLowercaseCharacters: true
        requireNumbers: true
        requireSymbols: true
        requireUppercaseCharacters: true

Group:
  items:
    test:
      forProvider: {}

GroupMembership:
  items:
    test:
      forProvider:
        groupSelector:
          matchLabels:
            testing.upbound.io/example-name: user
        name: up-group-membership
        userSelector:
          matchLabels:
            testing.upbound.io/example-name: user

GroupPolicyAttachment:
  items:
    test:
      forProvider:
        groupSelector:
          matchLabels:
            testing.upbound.io/example-name: user
        policyArnSelector:
          matchLabels:
            testing.upbound.io/example-name: user

InstanceProfile:
  items:
    test:
      forProvider:
        roleSelector:
          matchLabels:
            testing.upbound.io/example-name: role

OpenIDConnectProvider:
  items:
    test:
      forProvider:
        clientIdList:
        - <clientID>
        thumbprintList:
        - <thumbprint>
        url: https://accounts.google.com

Policy:
  items:
    input-as-dict-statement-as-dict:
      labels:
        crossplane.io/infra-resource: test
      deletionPolicy: Delete
      forProvider:
        description: "IAM Policy that was defined as a yaml with Statement as a dict (most advanced form)"
        policy:
          Version: "2012-10-17"
          Statement:
            accountRead:
              Effect: "Allow"
              Action:
                - "iam:GetAccountSummary"
                - "iam:ListAccountAliases"
                - "account:ListRegions"
              Resource: "*"
            route53RecordSets:
              Effect: "Allow"
              Action:
                - "route53:ChangeResourceRecordSets"
                - "route53:ListResourceRecordSets"
              Resource: 'arn:aws:route53:::hostedzone/{{ .Values.global.env | replace "-" "" }}*'
            route53ListHostedZones:
              Effect: "Allow"
              Action:
                - "route53:ListHostedZonesByName"
              Resource: "*"

    input-as-dict-statement-as-list:
      labels:
        crossplane.io/infra-resource: test
      deletionPolicy: Delete
      forProvider:
        description: "IAM Policy that was defined as a yaml with Statement as a list"
        policy:
          Version: "2012-10-17"
          Statement:
            - Sid: "accountRead"
              Effect: "Allow"
              Action:
                - "iam:GetAccountSummary"
                - "iam:ListAccountAliases"
                - "account:ListRegions"
              Resource: "*"
            - Sid: "route53RecordSets"
              Effect: "Allow"
              Action:
                - "route53:ChangeResourceRecordSets"
                - "route53:ListResourceRecordSets"
              Resource: 'arn:aws:route53:::hostedzone/{{ .Values.global.env | replace "-" "" }}*'
            - Sid: route53ListHostedZones
              Effect: "Allow"
              Action:
                - "route53:ListHostedZonesByName"
              Resource: "*"

    input-as-json-string:
      labels:
        crossplane.io/infra-resource: test
      deletionPolicy: Delete
      forProvider:
        description: "IAM Policy that was defined as a json string"
        policy: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "accountRead",
                "Effect": "Allow",
                "Action": [
                  "iam:GetAccountSummary",
                  "iam:ListAccountAliases",
                  "account:ListRegions"
                ],
                "Resource": "*"
              },
              {
                "Sid": "route53RecordSets",
                "Effect": "Allow",
                "Action": [
                  "route53:ChangeResourceRecordSets",
                  "route53:ListResourceRecordSets"
                ],
                "Resource": "arn:aws:route53:::hostedzone/{{ .Values.global.env | replace "-" "" }}*"
              },
              {
                "Sid": "route53ListHostedZones",
                "Effect": "Allow",
                "Action": [
                  "route53:ListHostedZonesByName"
                ],
                "Resource": "*"
              }
            }
          }

Role:
  items:
    test:
      forProvider:
        description: "IAM Role generated using crossplane + helm chart"
        maxSessionDuration: 3600 # 1 to 12 hours
        assumeRolePolicy:
          Statement:
            _:
              Effect: "Allow"
              Principal:
                Service: "ec2.amazonaws.com"
              Action: "sts:AssumeRole"

RolePolicyAttachment:
  items:
    test:
      forProvider: {}

RolePolicy:
  items:
    test:
      forProvider:
        policy:
          Statement:
            allowS3ListBucket:
              Effect: Allow
              Action:
                - s3:ListBucket
              Resource:
                - arn:aws:s3:::samle-bucket
            allowS3RwAccess:
              Effect: Allow
              Action:
                - s3:PutObject
                - s3:GetObject
                - s3:DeleteObject
                - s3:PutObjectAcl
              Resource:
                - arn:aws:s3:::sample-bucket/*
        roleRef:
          name: sample-role

SAMLProvider:
  items:
    test:
      forProvider:
        samlMetadataDocument: |
          ### This content is issued by your IdP.
          ### It includes the issuer's name, expiration information and keys.
          ### This file content needs to be a valid UTF-8 XML.

ServerCertificate:
  items:
    test:
      forProvider:
        certificateBody: |
          -----BEGIN CERTIFICATE-----
          [......] # cert contents
          -----END CERTIFICATE-----
        privateKeySecretRef:
          key: pem
          name: example-secret
          namespace: crossplane-system

ServiceLinkedRole:
  items:
    test:
      forProvider:
        awsServiceName: elasticbeanstalk.amazonaws.com

ServiceSpecificCredential:
  items:
    test:
      forProvider:
        serviceName: codecommit.amazonaws.com
        userNameSelector:
          matchLabels:
            testing.upbound.io/example-name: user

SigningCertificate:
  items:
    test:
      forProvider:
        certificateBody: |
          -----BEGIN CERTIFICATE-----
          [......] # cert contents
          -----END CERTIFICATE-----
        userName: some_test_cert

User:
  items:
    test:
      forProvider: {}

UserGroupMembership:
  items:
    test:
      forProvider:
        groupSelector:
          matchLabels:
            testing.upbound.io/example-name: group
        userSelector:
          matchLabels:
            testing.upbound.io/example-name: group

UserLoginProfile:
  items:
    test:
      forProvider:
        pgpKey: keybase:username
        userRef:
          name: sample-user
        passwordResetRequired: false
        passwordLength: 20

UserPolicyAttachment:
  items:
    test:
      forProvider: {}

UserSSHKey:
  items:
    test:
      forProvider:
        encoding: SSH
        publicKey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41
          mytest@mydomain.com
        usernameRef:
          name: sample-user

VirtualMfaDevice:
  items:
    test:
      forProvider:
        virtualMfaDeviceName: example
