---
## AWS resources configurations
APIKey:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider: {}

Authorizer:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        type_: "LAMBDA_TOKEN"
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'

BasePathMapping:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'

Deployment:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'

DocumentationPart:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        location:
          path: /
          statusCode: 200
        properties: |-
          key=value
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'

DocumentationVersion:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'
        documentationVersion: "1.0"

DomainName:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        certificateName: '{{ include "common-gitops.names.release" . }}'

GatewayResponse:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        responseType: "404"

IntegrationResponse:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'
        statusCode: "200"
        httpMethod: "GET"

Integration:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'
        type_: "HTTP"
        httpMethod: "GET"

MethodResponse:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'
        statusCode: "200"
        httpMethod: "GET"

Method:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'
        authorizationType: AWS_IAM
        httpMethod: "GET"

Model:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'
        contentType: application/json

RequestValidator:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider: {}

Resource:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'
        pathPart: "stack"

RestAPI:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        version: v1

Stage:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        cacheClusterEnabled: true

UsagePlanKey:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        keyID: '{{ include "common-gitops.names.release" . }}'
        keyType: API_KEY
        restApiRef:
          name: '{{ include "common-gitops.names.release" . }}'

UsagePlan:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        description: Usage plan

VPCLink:
  enabled: true
  deletionPolicy: Delete
  items:
    _:
      forProvider:
        targetARNs:
          - aws:arn:xxxx:xxx:xxxx
