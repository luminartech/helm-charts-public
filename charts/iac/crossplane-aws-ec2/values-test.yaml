---
## AWS EC2 resources configurations
global:
  vpcCidr: 172.21.0.0/16

AMI:
  items:
    test:
      forProvider:
        ebsBlockDevice:
        - deviceName: /dev/xvda
          snapshotIdSelector:
            matchLabels:
              testing.upbound.io/example-name: example
          volumeSize: 8
        name: terraform-example
        region: us-west-1
        rootDeviceName: /dev/xvda
        virtualizationType: hvm

AMICopy:
  items:
    test:
      forProvider:
        description: A copy of ami-xxxxxxxx
        name: terraform-example
        region: us-west-1
        sourceAmiIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        sourceAmiRegion: us-west-1
        tags:
          Name: HelloWorld

AMILaunchPermission:
  items:
    test:
      forProvider:
        accountId: "123456789012"
        imageIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        region: us-west-1

AvailabilityZoneGroup:
  items:
    test:
      forProvider:
        optInStatus: opted-in
        region: us-west-2

CapacityReservation:
  items:
    test:
      forProvider:
        availabilityZone: us-west-1a
        instanceCount: 1
        instancePlatform: Linux/UNIX
        instanceType: t2.micro
        region: us-west-1

CarrierGateway:
  items:
    test:
      forProvider:
        region: us-east-1
        tags:
          Name: example-carrier-gateway
        vpcIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

CustomerGateway:
  items:
    test:
      forProvider:
        bgpAsn: "65000"
        ipAddress: 172.83.124.10
        region: us-west-1
        tags:
          Name: main-customer-gateway
        type: ipsec.1

DefaultNetworkACL:
  items:
    test:
      forProvider:
        defaultNetworkAclIdSelector:
          matchLabels:
            testing.upbound.io/example-name: mainvpc
        egress:
        - action: allow
          cidrBlock: 0.0.0.0/0
          fromPort: 0
          protocol: "-1"
          ruleNo: 100
          toPort: 0
        ingress:
        - action: allow
          cidrBlock: 10.1.0.0/16
          fromPort: 0
          protocol: "-1"
          ruleNo: 100
          toPort: 0
        region: us-west-1

DefaultRouteTable:
  items:
    test:
      forProvider:
        defaultRouteTableIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        region: us-west-1
        route:
        - cidrBlock: 10.0.1.0/24
          gatewayIdSelector:
            matchLabels:
              testing.upbound.io/example-name: example
        - egressOnlyGatewayIdSelector:
            matchLabels:
              testing.upbound.io/example-name: example
          ipv6CidrBlock: ::/0
        tags:
          Name: example

DefaultSecurityGroup:
  items:
    test:
      forProvider:
        egress:
        - cidrBlocks:
          - 0.0.0.0/0
          fromPort: 0
          protocol: "-1"
          toPort: 0
        ingress:
        - fromPort: 0
          protocol: "-1"
          self: true
          toPort: 0
        region: us-west-1
        vpcIdSelector:
          matchLabels:
            testing.upbound.io/example-name: mainvpc

DefaultSubnet:
  items:
    test:
      forProvider:
        availabilityZone: us-west-1a
        region: us-west-1
        tags:
          Name: Default subnet for us-west-1a

DefaultVPC:
  items:
    test:
      forProvider:
        region: us-west-1
        tags:
          Name: Default VPC

DefaultVPCDHCPOptions:
  items:
    test:
      forProvider:
        region: us-west-1
        tags:
          Name: Default DHCP Option Set

EBSDefaultKMSKey:
  items:
    test:
      forProvider:
        keyArnSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        region: us-west-1

EBSEncryptionByDefault:
  items:
    test:
      forProvider:
        enabled: true
        region: us-west-1

EBSSnapshot:
  items:
    test:
      forProvider:
        region: us-west-1
        tags:
          Name: HelloWorld_snap
        volumeIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

EBSSnapshotCopy:
  items:
    test:
      forProvider:
        region: us-west-1
        sourceRegion: us-west-1
        sourceSnapshotIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example_snapshot
        tags:
          Name: HelloWorld_copy_snap

EBSSnapshotImport:
  items:
    test:
      forProvider:
        diskContainer:
        - format: VMDK
          userBucket:
          - s3Bucket: upbound-provider-test-data
            s3Key: centos.vmdk
        region: us-east-1
        tags:
          Name: HelloWorld

EBSVolume:
  items:
    test:
      forProvider:
        availabilityZone: us-west-1c
        region: us-west-1
        size: 1
        tags:
          Name: HelloWorld

EIP:
  items:
    test:
      forProvider:
        instanceRef:
          name: sample-instance
        vpc: true
        region: us-west-1

EIPAssociation:
  items:
    test:
      forProvider:
        allocationIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        instanceIdSelector:
          matchLabels:
            testing.upbound.io/example-name: web
        region: us-west-1

EgressOnlyInternetGateway:
  items:
    test:
      forProvider:
        region: us-west-1
        tags:
          Name: main
        vpcIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

FlowLog:
  items:
    test:
      forProvider:
        iamRoleArnSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        logDestinationSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        region: us-west-1
        trafficType: ALL
        vpcIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

Host:
  items:
    test:
      forProvider:
        autoPlacement: "on"
        availabilityZone: us-west-1a
        hostRecovery: "on"
        instanceType: c5.18xlarge
        region: us-west-1

Instance:
  items:
    test:
      forProvider:
        region: us-west-1
        ami: ami-07b068f843ec78e72
        instanceType: t2.micro
        networkInterface:
        - deviceIndex: 0
          networkInterfaceIdSelector:
            matchLabels:
              testing.upbound.io/example-name: sample-instance
        creditSpecification:
        - cpuCredits: unlimited

InstanceState:
  items:
    test:
      forProvider:
        instanceIdSelector:
          matchLabels:
            testing.upbound.io/example-name: test
        region: us-west-1
        state: stopped

InternetGateway:
  items:
    test:
      forProvider:
        region: us-west-1
        tags:
          Name: main
        vpcIdRef:
          name: sample-vpc

KeyPair:
  items:
    test:
      forProvider:
        publicKey: <public-key>
        region: us-west-1

LaunchTemplate:
  items:
    test:
      forProvider:
        region: us-west-1
        blockDeviceMappings:
        - deviceName: /dev/sda1
          ebs:
          - volumeSize: 20
        capacityReservationSpecification:
        - capacityReservationPreference: open
        cpuOptions:
        - coreCount: 4
          threadsPerCore: 2
        creditSpecification:
        - cpuCredits: standard
        disableApiTermination: true
        ebsOptimized: "true"
        elasticGpuSpecifications:
        - type: test
        elasticInferenceAccelerator:
        - type: eia1.medium
        instanceInitiatedShutdownBehavior: terminate
        instanceMarketOptions:
        - marketType: spot
        instanceType: t2.micro
        keyName: test
        metadataOptions:
        - httpEndpoint: enabled
          httpPutResponseHopLimit: 1
          httpTokens: required
          instanceMetadataTags: enabled
        monitoring:
        - enabled: true
        name: foo
        networkInterfaces:
        - associatePublicIpAddress: "true"
        placement:
        - availabilityZone: us-west-2a
        tagSpecifications:
        - resourceType: instance
          tags:
            Name: test

MainRouteTableAssociation:
  items:
    test:
      forProvider:
        region: us-west-1
        routeTableIdSelector:
          matchLabels:
            testing.upbound.io/example-name: table
        vpcIdSelector:
          matchLabels:
            testing.upbound.io/example-name: route-vpc

ManagedPrefixList:
  items:
    test:
      forProvider:
        addressFamily: IPv4
        maxEntries: 10
        name: test

ManagedPrefixListEntry:
  items:
    test:
      forProvider: {}

NATGateway:
  items:
    test:
      forProvider:
        region: us-west-1
        connectivityType: "private"
        subnetIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        tags:
          Name: gw NAT

NetworkACL:
  items:
    test:
      forProvider:
        region: us-west-1
        tags:
          Name: main
        vpcIdRef:
          name: example

NetworkACLRule:
  items:
    test:
      forProvider:
        cidrBlock: ${aws_vpc.foo.cidr_block}
        egress: false
        fromPort: 22
        networkAclId: ${aws_network_acl.bar.id}
        protocol: tcp
        region: us-west-1
        ruleAction: allow
        ruleNumber: 200
        toPort: 22

NetworkInsightsAnalysis:
  items:
    test:
      forProvider:
        networkInsightsPathIdSelector:
          matchLabels:
            testing.upbound.io/example-name: path
        region: us-west-1


NetworkInsightsPath:
  items:
    test:
      forProvider:
        destinationSelector:
          matchLabels:
            testing.upbound.io/example-name: destination
        protocol: tcp
        region: us-west-1
        sourceSelector:
          matchLabels:
            testing.upbound.io/example-name: source


NetworkInterface:
  items:
    test:
      forProvider:
        region: us-west-1
        subnetIdRef:
          name: sample-subnet1
        privateIps:
          - "172.16.10.100"

NetworkInterfaceAttachment:
  items:
    test:
      forProvider:
        deviceIndex: 1
        instanceIdSelector:
          matchLabels:
            testing.upbound.io/example-name: test
        networkInterfaceIdSelector:
          matchLabels:
            testing.upbound.io/example-name: test2
        region: us-west-1

NetworkInterfaceSgAttachment:
  items:
    test:
      forProvider:
        networkInterfaceIdSelector:
          matchLabels:
            testing.upbound.io/example-name: instance
        region: us-west-1
        securityGroupIdSelector:
          matchLabels:
            testing.upbound.io/example-name: sg

PlacementGroup:
  items:
    test:
      forProvider:
        region: us-west-1
        strategy: cluster

Route:
  items:
    test:
      forProvider:
        region: us-west-1
        destinationCidrBlock: 0.0.0.0/0
        gatewayIdRef:
          name: routegw
        routeTableIdRef:
          name: table

RouteTable:
  items:
    test:
      forProvider:
        region: us-west-1
        vpcIdRef:
          name: rta

RouteTableAssociation:
  items:
    test:
      forProvider:
        region: us-west-1
        routeTableIdRef:
          name: rta
        subnetIdRef:
          name: rta

SecurityGroup:
  items:
    test:
      forProvider:
        region: us-west-1
        description: Allow TLS inbound traffic
        #name: allow_tls
        tags:
          Name: allow_tls
        vpcIdRef:
          name: sample-vpc
    test-name-override:
      forProvider:
        region: us-west-1
        description: Allow TLS inbound traffic
        name: allow_tls
        tags:
          Name: allow_tls
        vpcIdRef:
          name: sample-vpc

SecurityGroupRule:
  items:
    test:
      forProvider:
        region: us-west-1
        cidrBlocks:
          - 10.0.0.0/16
        fromPort: 0
        protocol: tcp
        securityGroupIdRef:
          name: example
        toPort: 65535
        type: ingress

SerialConsoleAccess:
  items:
    test:
      forProvider:
        enabled: true
        region: us-west-1

SnapshotCreateVolumePermission:
  items:
    test:
      forProvider:
        accountId: "123456789012"
        region: us-west-1
        snapshotIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example_snapshot

SpotDatafeedSubscription:
  items:
    test:
      forProvider:
        bucket: up-spotdata
        prefix: my_subdirectory
        region: us-west-1

SpotFleetRequest:
  items:
    test:
      forProvider:
        allocationStrategy: capacityOptimized
        iamFleetRole: arn:aws:iam::${data.aws_account_id}:role/aws-service-role/spotfleet.amazonaws.com/AWSServiceRoleForEC2SpotFleet
        launchSpecification:
        - ami: ami-0bdb828fd58c52235
          iamInstanceProfileArnSelector:
            matchLabels:
              testing.upbound.io/example-name: test_profile
          instanceType: t3.micro
          placementTenancy: dedicated
          spotPrice: "2.793"
        region: us-west-1
        spotPrice: "0.03"
        targetCapacity: 6

SpotInstanceRequest:
  items:
    test:
      forProvider:
        ami: ami-0d9858aa3c6322f73
        instanceType: c4.xlarge
        region: us-west-1

Subnet:
  tags:
    kubernetes.io/cluster/cluster-name: test-cluster
  items:
    public-a:
      deletionPolicy: Delete
      forProvider:
        availabilityZone: us-west-2a
        cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "0.0/24") }}'
        tags:
          "kubernetes.io/role/elb": "1"
    public-b:
      deletionPolicy: Delete
      forProvider:
        availabilityZone: us-west-2b
        cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "1.0/24") }}'
        tags:
          "kubernetes.io/role/elb": "1"
    public-c:
      deletionPolicy: Delete
      forProvider:
        availabilityZone: us-west-2c
        cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "2.0/24") }}'
        tags:
          "kubernetes.io/role/elb": "1"
    private-a:
      deletionPolicy: Delete
      labels:
        "app.kubernetes.io/private": "true"
      forProvider:
        availabilityZone: us-west-2a
        cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "10.0/24") }}'
        tags:
          "kubernetes.io/role/internal-elb": "1"
    private-b:
      deletionPolicy: Delete
      labels:
        "app.kubernetes.io/private": "true"
      forProvider:
        availabilityZone: us-west-2b
        cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "11.0/24") }}'
        tags:
          "kubernetes.io/role/internal-elb": "1"
    private-c:
      deletionPolicy: Delete
      labels:
        "app.kubernetes.io/private": "true"
      forProvider:
        availabilityZone: us-west-2c
        cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "12.0/24") }}'
        tags:
          "kubernetes.io/role/internal-elb": "1"

SubnetCidrReservation:
  items:
    test:
      forProvider:
        cidrBlock: 172.16.10.0/28
        region: us-west-1
        reservationType: prefix
        subnetIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

Tag:
  items:
    test:
      forProvider:
        key: karpenter.sh/discovery
        region: us-west-1
        resourceId: <resourceid-arn>
        value: sample-eks-cluster

TrafficMirrorFilter:
  items:
    test:
      forProvider:
        description: traffic mirror filter - terraform example
        networkServices:
        - amazon-dns
        region: us-west-1

TrafficMirrorFilterRule:
  items:
    test:
      forProvider:
        description: test rule
        destinationCidrBlock: 10.0.0.0/8
        region: us-west-1
        ruleAction: accept
        ruleNumber: 1
        sourceCidrBlock: 10.0.0.0/8
        trafficDirection: egress
        trafficMirrorFilterIdSelector:
          matchLabels:
            testing.upbound.io/example-name: filter

TransitGateway:
  items:
    test:
      forProvider:
        region: us-west-1
        multicastSupport: enable

TransitGatewayConnect:
  items:
    test:
      forProvider:
        region: us-west-1
        transitGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        transportAttachmentIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

TransitGatewayConnectPeer:
  items:
    test:
      forProvider:
        insideCidrBlocks: ["169.254.100.0/29"]
        peerAddress: 10.1.2.3
        region: us-west-1
        transitGatewayAttachmentIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

TransitGatewayMulticastDomain:
  items:
    test:
      forProvider:
        region: us-west-1
        staticSourcesSupport: enable
        tags:
          Name: Transit_Gateway_Multicast_Domain_Example
        transitGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

TransitGatewayMulticastDomainAssociation:
  items:
    test:
      forProvider:
        region: us-west-1
        subnetIdRef:
          name: sample-subnet1
        transitGatewayAttachmentIdRef:
          name: example
        transitGatewayMulticastDomainIdRef:
          name: domain

TransitGatewayMulticastGroupMember:
  items:
    test:
      forProvider:
        groupIpAddress: 224.0.0.1
        networkInterfaceIdRef:
          name: sample-ni
        region: us-west-1
        transitGatewayMulticastDomainIdRef:
          name: domain

TransitGatewayMulticastGroupSource:
  items:
    test:
      forProvider:
        groupIpAddress: 224.0.0.1
        networkInterfaceIdSelector:
          matchLabels:
            testing.upbound.io/example-name: test
        region: us-west-1
        transitGatewayMulticastDomainIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

TransitGatewayPeeringAttachment:
  items:
    test:
      forProvider:
        peerAccountId: "${data.aws_account_id}"
        peerRegion: us-west-2
        peerTransitGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example-peer
        region: us-west-1
        tags:
          Name: TGW Peering Requestor
        transitGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example-local

TransitGatewayPeeringAttachmentAccepter:
  items:
    test:
      forProvider:
        region: us-west-2
        tags:
          Name: Example cross-account attachment
        transitGatewayAttachmentIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

TransitGatewayPolicyTable:
  items:
    test:
      forProvider:
        region: us-west-1
        tags:
          Name: Example Policy Table
        transitGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: policytable

TransitGatewayPrefixListReference:
  items:
    test:
      forProvider:
        prefixListIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        region: us-west-1
        transitGatewayAttachmentIdSelector:
          matchLabels:
            testing.upbound.io/example-name: attachment1
        transitGatewayRouteTableIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

TransitGatewayRoute:
  items:
    test:
      forProvider:
        destinationCidrBlock: 0.0.0.0/0
        region: us-west-1
        transitGatewayAttachmentIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        transitGatewayRouteTableIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

TransitGatewayRouteTable:
  items:
    test:
      forProvider:
        region: us-west-1
        transitGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

TransitGatewayRouteTableAssociation:
  items:
    test:
      forProvider:
        region: us-west-1
        transitGatewayAttachmentIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        transitGatewayRouteTableIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

TransitGatewayRouteTablePropagation:
  items:
    test:
      forProvider:
        region: us-west-1
        transitGatewayAttachmentIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        transitGatewayRouteTableIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

TransitGatewayVPCAttachment:
  items:
    test:
      forProvider:
        region: us-west-1
        subnetIdRefs:
        - name: sample-subnet1
        transitGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        vpcIdRef:
          name: sample-vpc

TransitGatewayVPCAttachmentAccepter:
  items:
    test:
      forProvider:
        region: us-west-1
        tags:
          Name: Example cross-account attachment
        transitGatewayAttachmentIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

VPC:
  items:
    test:
      forProvider:
        region: us-west-1
        cidrBlock: 172.16.0.0/16
        tags:
          Name: DemoVpc

VPCDHCPOptions:
  items:
    test:
      forProvider:
        domainNameServers:
        - 8.8.8.8
        - 8.8.4.4
        region: us-west-1

VPCDHCPOptionsAssociation:
  items:
    test:
      forProvider:
        dhcpOptionsId: ${aws_vpc_dhcp_options.foo.id}
        region: us-west-1
        vpcIdRef:
          name: example

VPCEndpoint:
  items:
    test:
      forProvider:
        region: us-west-1
        serviceName: com.amazonaws.us-west-1.s3
        vpcEndpointType: Gateway
        vpcIdSelector:
          matchLabels:
            testing.upbound.io/example-name: vpc1

VPCEndpointConnectionNotification:
  items:
    test:
      forProvider:
        connectionEvents:
          - Accept
          - Reject
        connectionNotificationArnSelector:
          matchLabels:
            testing.upbound.io/example-name: topic
        region: us-west-1
        vpcEndpointServiceIdSelector:
          matchLabels:
            testing.upbound.io/example-name: foo

VPCEndpointRouteTableAssociation:
  items:
    test:
      forProvider:
        region: us-west-1
        routeTableIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        vpcEndpointIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

VPCEndpointSecurityGroupAssociation:
  items:
    test:
      forProvider:
        region: us-west-1
        securityGroupIdSelector:
          matchLabels:
            testing.upbound.io/example-name: securitygroup1
        vpcEndpointIdSelector:
          matchLabels:
            testing.upbound.io/example-name: ec2

VPCEndpointService:
  items:
    test:
      forProvider:
        acceptanceRequired: false
        networkLoadBalancerArns:
          - ${networkLoadBalancerArn}
        region: us-west-1

VPCEndpointServiceAllowedPrincipal:
  items:
    test:
      forProvider:
        principalArn: ${data.aws_caller_identity.current.arn}
        region: us-west-1
        vpcEndpointServiceIdSelector:
          matchLabels:
            testing.upbound.io/example-name: foo

VPCEndpointSubnetAssociation:
  items:
    test:
      forProvider:
        region: us-west-1
        subnetIdSelector:
          matchLabels:
            testing.upbound.io/example-name: subnet1
        vpcEndpointIdSelector:
          matchLabels:
            testing.upbound.io/example-name: ec2

VPCIPv4CidrBlockAssociation:
  items:
    test:
      forProvider:
        region: us-west-1
        cidrBlock: 172.2.0.0/16
        vpcIdRef:
          name: sample-vpc

VPCIpam:
  items:
    test:
      forProvider:
        description: My IPAM
        operatingRegions:
        - regionName: us-west-1
        region: us-west-1
        tags:
          Test: Main

VPCIpamPool:
  items:
    test:
      forProvider:
        addressFamily: ipv4
        ipamScopeIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        locale: us-west-1
        region: us-west-1

VPCIpamPoolCidr:
  items:
    test:
      forProvider:
        cidr: 172.2.0.0/16
        ipamPoolIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        region: us-west-1

VPCIpamPoolCidrAllocation:
  items:
    test:
      forProvider:
        cidr: 172.2.0.0/24
        ipamPoolIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        region: us-west-1

VPCIpamScope:
  items:
    test:
      forProvider:
        description: Another Scope
        ipamIdSelector:
          matchLabels:
            testing.upbound.io/example-name: main
        region: us-west-1

VPCPeeringConnection:
  items:
    test:
      forProvider:
        peerOwnerId: <peer-owner-id>
        peerVpcIdSelector:
          matchLabels:
            testing.upbound.io/example-name: bar
        region: us-west-1
        vpcIdSelector:
          matchLabels:
            testing.upbound.io/example-name: foo

VPCPeeringConnectionAccepter:
  items:
    test:
      forProvider:
        autoAccept: true
        region: eu-west-1
        tags:
          Side: Accepter
        vpcPeeringConnectionIdSelector:
          matchLabels:
            testing.upbound.io/example-name: vpcpeerconnectionlabel

VPCPeeringConnectionOptions:
  items:
    test:
      forProvider:
        accepter:
        - allowRemoteVpcDnsResolution: true
        region: eu-west-1
        requester:
        - allowClassicLinkToRemoteVpc: true
          allowVpcToRemoteClassicLink: true
        vpcPeeringConnectionIdSelector:
          matchLabels:
            testing.upbound.io/example-name: vpcpeerconnectionlabel

VPNConnection:
  items:
    test:
      forProvider:
        customerGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: customer_gateway
        region: us-west-1
        staticRoutesOnly: true
        type: "ipsec.1"
        vpnGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: vpn_gateway

VPNConnectionRoute:
  items:
    test:
      forProvider:
        destinationCidrBlock: 192.168.10.0/24
        region: us-west-1
        vpnConnectionIdSelector:
          matchLabels:
            testing.upbound.io/example-name: main

VPNGateway:
  items:
    test:
      forProvider:
        region: us-west-1
        tags:
          Name: main
        vpcIdSelector:
          matchLabels:
            testing.upbound.io/example-name: main

VPNGatewayAttachment:
  items:
    test:
      forProvider:
        region: us-west-1
        vpcIdSelector:
          matchLabels:
            testing.upbound.io/example-name: network
        vpnGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: vpn

VPNGatewayRoutePropagation:
  items:
    test:
      forProvider:
        region: us-west-1
        routeTableIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        vpnGatewayIdSelector:
          matchLabels:
            testing.upbound.io/example-name: example

VolumeAttachment:
  items:
    test:
      forProvider:
        deviceName: /dev/sdh
        instanceId: ${aws_instance.web.id}
        region: us-west-1
        volumeId: ${aws_ebs_volume.example.id}
