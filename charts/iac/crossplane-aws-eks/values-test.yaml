---
## AWS EKS resources configurations

global:
  clusterAuthName: test
  tags:
    globaltag: globalvalue

Addon:
  items:
    coredns:
      forProvider:
        addonName: vpc-cni
        clusterNameSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        region: us-west-1

Cluster:
  items:
    test:
      forProvider:
        region: us-west-1
        roleArnRef:
          name: sample-eks-cluster
        vpcConfig:
          - subnetIdRefs:
              - name: sample-subnet1
              - name: sample-subnet2

ClusterAuth:
  items:
    test:
      writeConnectionSecretToRef:
        enabled: true
        name: '{{ .Values.global.clusterAuthName }}'
        namespace: '{{ .Release.Namespace }}'
      forProvider:
        region: us-west-1
        clusterNameSelector:
          matchLabels:
            testing.upbound.io/example-name: example

FargateProfile:
  items:
    test:
      forProvider:
        region: us-west-1
        clusterNameRef:
          name: sample-eks-cluster
        podExecutionRoleArnRef:
          name: sample-fargate-role
        selector:
        - namespace: example
        subnetIdRefs:
        - name: private-subnet

IdentityProviderConfig:
  items:
    test:
      forProvider:
        region: us-west-1
        clusterNameSelector:
          matchLabels:
            testing.upbound.io/example-name: example
        oidc:
        - clientId: test-audience
          issuerUrl: https://issuer.url

NodeGroup:
  items:
    test:
      forProvider:
        region: us-west-1
        clusterNameRef:
          name: sample-eks-cluster
        nodeRoleArnRef:
          name: sample-node-role
        subnetIdRefs:
          - name: sample-subnet1
          - name: sample-subnet2
        scalingConfig:
          - minSize: 1
            maxSize: 1
            desiredSize: 1
