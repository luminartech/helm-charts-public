---
## @section Global parameters
## Global parameters
## These variables are accessible to all dependency helm charts.
##

global:
  ## @param global.chartNameOverride Overrides the chart name.
  ##
  chartNameOverride: ""
  ## @param global.releaseNameOverride Overrides the release name.
  ##
  releaseNameOverride: ""
  ## @param global.tags Define common tags for all IAC and app resources generated by this chart.
  ##
  tags: {}
  ## @param global.labels Define common labels for all IAC and app resources generated by this chart.
  ##
  labels: {}
  ## @param global.annotations Define common annotations for all IAC and app resources generated by this chart.
  ##
  annotations: {}
  ## @param global.awsAccountId Default aws account id for crossplane aws provider resources. Quotes are important, value must be a string.
  ##
  awsAccountId: "0123456789"
  ## @param global.awsRegion Default aws region for crossplane aws provider resources.
  ##
  awsRegion: us-east-2
  ## @param global.eksHash Default EKS cluster hash for relevant crossplane resources such as IAM Role.
  ##
  eksHash: "XXXXX"
  ## @param global.providerConfigRef.name Default crossplane provider all resources generated for crossplane.
  ##
  providerConfigRef:
    name: aws
  ## @param global.logLevel Set log level to 2 for normal mode and 6 for debug mode.
  logLevel: 6
  ## @param global.deploymentName Deployment name for the app.
  deploymentName: cost-analyzer


## @skip cost-analyzer
##
cost-analyzer:
  enabled: false
  fullnameOverride: cost-analyzer

## @skip crossplane-aws-iam
##
crossplane-aws-iam:
  enabled: false
  Policy:
    items:
      _:
        forProvider:
          description: "IAM Policy for kubecost to access AWS"
          policy:
            Statement:
              spotDataAccess:
                Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                  - s3:ListBucket
                  - s3:HeadBucket
                  - s3:HeadObject
                  - s3:List*
                  - s3:Get*
                Resource: "*"
              athenaAccess:
                Effect: Allow
                Action:
                - athena:*
                Resource:
                - "*"
              readAccessToAthenaCurDataViaGlue:
                Effect: Allow
                Action:
                - glue:GetDatabase*
                - glue:GetTable*
                - glue:GetPartition*
                - glue:GetUserDefinedFunction
                - glue:BatchGetPartition
                Resource:
                - arn:aws:glue:*:*:catalog
                - arn:aws:glue:*:*:database/athenacurcfn*
                - arn:aws:glue:*:*:table/athenacurcfn*/*
              athenaQueryResultsOutput:
                Effect: Allow
                Action:
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:CreateBucket
                - s3:PutObject
                Resource:
                - arn:aws:s3:::aws-athena-query-results-*
              s3ReadAccessToAwsBillingData:
                Effect: Allow
                Action:
                - s3:Get*
                - s3:List*
                Resource: 'arn:aws:s3:::{{ include "common-gitops.names.release" . }}-athena*'
              readAccessToAccountTags:
                Effect: Allow
                Action:
                - organizations:ListAccounts
                - organizations:ListTagsForResource
                Resource:
                - "*"
  Role:
    items:
      _:
        forProvider:
          assumeRolePolicy:
            Statement:
              allowAssumeRoleWebIdentity:
                Effect: Allow
                Action: sts:AssumeRoleWithWebIdentity
                Principal:
                  Federated: 'arn:aws:iam::{{ .Values.global.awsAccountId }}:oidc-provider/oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}'
                Condition:
                  StringEquals:
                    'oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}:sub': 'system:serviceaccount:{{ .Release.Namespace }}:{{ .Values.global.deploymentName }}'
                    'oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}:aud': 'sts.amazonaws.com'
              allowEC2AssumeRole:
                Effect: Allow
                Principal:
                  Service: ec2.amazonaws.com
                Action: sts:AssumeRole
              allowSelfAssumeRole:
                Effect: Allow
                Principal:
                  AWS: '*'
                Action: sts:AssumeRole
                Condition:
                  ArnLike:
                    "aws:PrincipalArn": 'arn:aws:iam::{{ .Values.global.awsAccountId }}:role/{{ include "common-gitops.names.release" . }}'
  RolePolicyAttachment:
    items:
      _:
        forProvider:
          policyArnRef:
            name: '{{ include "common-gitops.names.release" . }}'
          roleRef:
            name: '{{ include "common-gitops.names.release" . }}'

## @skip crossplane-aws-s3
crossplane-aws-s3:
  enabled: false
  Bucket:
    items:
      athena:
        forProvider: {}
  BucketPublicAccessBlock:
    items:
      athena:
        forProvider:
          blockPublicAcls: true
          blockPublicPolicy: true
          ignorePublicAcls: true
          restrictPublicBuckets: true
          bucketRef:
            name: '{{ include "common-gitops.names.release" . }}-athena'
  BucketPolicy:
    items:
      athena:
        forProvider:
          policy:
            Statement:
              allowFullAccess:
                Effect: "Allow"
                Principal:
                  AWS: 'arn:aws:iam::{{ .Values.global.awsAccountId }}:role/{{ include "common-gitops.names.release" . }}'
                Action: "s3:*"
                Resource:
                  - 'arn:aws:s3:::{{ include "common-gitops.names.release" . }}-athena'
                  - 'arn:aws:s3:::{{ include "common-gitops.names.release" . }}-athena/*'
          bucketRef:
            name: '{{ include "common-gitops.names.release" . }}-athena'
