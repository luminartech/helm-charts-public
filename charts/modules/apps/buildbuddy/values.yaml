---
## @section Global parameters
## Global parameters
## These variables are accessible to all dependency helm charts.
##

global:
  ## @param global.chartNameOverride Overrides the chart name.
  ##
  chartNameOverride: ""
  ## @param global.releaseNameOverride Overrides the release name.
  ##
  releaseNameOverride: ""
  ## @param global.tags Define common tags for all IAC and app resources generated by this chart.
  ##
  tags: {}
  ## @param global.labels Define common labels for all IAC and app resources generated by this chart.
  ##
  labels: {}
  ## @param global.annotations Define common annotations for all IAC and app resources generated by this chart.
  ##
  annotations: {}
  ## @param global.environment Application environment
  ##
  environment: 'dev'

## @section buildbuddy configurations
##

# TODO: add documentation with @-style

buildbuddy:
  enable: false
  ## Default values for BuildBuddy.
  ## This is a YAML-formatted file.
  ## Declare variables to be passed into your templates.

  ## The BuildBuddy container image to use.
  image:
    repository: gcr.io/flame-public/buildbuddy-app-onprem
    tag: v2.21.1
    imagePullPolicy: IfNotPresent

  ## The number of app replicas to run.
  ## If setting this number higher than 1, make sure to configure a mysql database (not sqlite) and gcs storage
  ## so data can be shared across replicas.
  ## Using multiple replicas with a sqlite3 database or disk storage is not supported.
  replicas: 1

  ## Enables disk storage using Persistent Volume Claims.
  ## You'll also need to specify a disk block in the config cache and/or storage blocks below.
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ## ref: https://docs.gitlab.com/ee/install/requirements.html#storage
  disk:
    ## This volume persists build events, cache artifacts, etc. when BuildBuddy is
    ## configured to use disk storage. To use this disk in your config, make sure
    ## your root_directory options begin with with /data/.
    data:
      enabled: true
      ## check max_size_bytes as well
      size: 10Gi
      ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
      ## Default: volume.alpha.kubernetes.io/storage-class: default
      ##
      # storageClass:
      accessMode: ReadWriteOnce
    # existingClaim: ""

  ## Exposes the BuildBuddy service via a LoadBalancer on the given ports.
  service:
    type: ClusterIP

    externalHTTPPort: 80
    externalGRPCPort: 1985
    externalHTTPSPort: 443
    externalGRPCSPort: 1986
    # Exposing metrics port in service is disabled by default
    # externalMetricsPort: 9090

    internalHTTPPort: 8080
    internalGRPCPort: 1985
    internalHTTPSPort: 8081
    internalGRPCSPort: 1986
    # internalMetricsPort: 9090

    annotations: {}
    # loadBalancerIP:
    loadBalancerSourceRanges: []

  ## You have two options for exposing BuildBuddy with TLS over HTTPS and GRPCS.
  ## 1) Via the load balancer
  ##   - Point your DNS at the load balancer IP, you can get this by deploying and running:
  ##        echo `kubectl get --namespace default service buildbuddy -o jsonpath='{.status.loadBalancer.ingress[0].*}'`
  ##   - Enable config.ssl.enable_ssl and config.ssl.use_acme to automatically get configure letsencrypt certs
  ##   - Adding http and grpc host names to config.ssl.host_whitelist
  ##   - Wait a bit for dns propagation to happen and certs to be issued (this can take a while).
  ##
  ## 2) Ingress
  ##   - Enable ingress with ingress.enabled and ingress.sslEnabled
  ##   - Configure http and grpc host names with ingress.httpHost and ingress.grpcHost
  ##   - Enable cert manager with certmanager.enabled
  ##   - Update the cert manager email address in certmanager.emailAddress
  ##   - Before you deploy, install CRDs with:
  ##        kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.16.1/cert-manager.crds.yaml
  ##   - Point your DNS at the ingress controller IP, you can get this by deploying and running:
  ##        echo `kubectl get service my-release-ingress-controller -o jsonpath='{.status.loadBalancer.ingress[0].*}'`
  ##   - Wait a bit for dns propagation to happen and certs to be issued (this can take a while).

  ingress:
    enabled: true
    class: "{{ private_ingress_class }}" # TODO can we use templates here? default was "nginx"

    ## To enable SSL, either enable certmanager below or specify a
    ## clusterIssuer that's already installed in the cluster.
    sslEnabled: true
    clusterIssuer: "{{ cluster_issuer }}" # TODO can we use templates here? default was "letsencrypt-prod"

    httpHost: buildbuddy.{{ team }}-{{ env }}.{{ tld }} # TODO can we use templates here? default was buildbuddy.example.com
    grpcHost: buildbuddy-grpc.{{ team }}-{{ env }}.{{ tld }}# TODO can we use templates here? default was buildbuddy-grpc.example.com

    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/client-body-buffer-size: "1024m"

    ## Nginx controller
    controller:
      enabled: false
      config:
        load-balance: "round_robin"
        ## The defaults here are low - this sets them for all servers.
        proxy-body-size: "0"
        ignore-invalid-headers: "false"
        server-snippet: |
          grpc_socket_keepalive on;
          grpc_read_timeout 7200s;
          grpc_send_timeout 7200s;
          client_body_timeout 7200s;
          client_body_buffer_size 4m;
          http2_idle_timeout 7200s;
          http2_max_concurrent_streams 10000;
          http2_max_requests 100000;

  certmanager:
    ## Before enabling certmanager, make sure to install the CRDs on your cluster with:
    ## kubectl apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.16.1/cert-manager.crds.yaml
    enabled: false
    ## If these CRDs are not installed, you will get the following error message:
    ## Error: unable to build kubernetes objects from release manifest: unable to recognize "": no matches for kind "ClusterIssuer" in version "cert-manager.io/v1alpha2"
    ##
    ## Email address to use for letsencrypt certs
    emailAddress: your-email@gmail.com

  ## Either enable mysql here, or use your own data_source connection string
  ## in the config block below.
  mysql:
    enabled: true
    mysqlRootPassword: "buildbuddy"
    mysqlUser: "buildbuddy"
    mysqlPassword: "buildbuddy"
    mysqlDatabase: buildbuddy

    repository: mysql
    imageTag: "8.0.18"

    ## needs higher values than default due to low disk speed
    livenessProbe:
      initialDelaySeconds: 600
      periodSeconds: 10
      timeoutSeconds: 5
      successThreshold: 1
      failureThreshold: 3

    readinessProbe:
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 1
      successThreshold: 1
      failureThreshold: 3

  # NOTE: These acts as the default values for the config.yaml file read by the
  # buildbuddy server itself. You can override the config object just like any
  # Helm template value. Since it is an object, the object you provide will merge
  # with these defaults.
  config:
    app:
      # build_buddy_url: "https://buildbuddy.example.com"
      # events_api_url: "grpcs://buildbuddy-grpc.example.com"
      # cache_api_url: "grpcs://buildbuddy-grpc.example.com"
      default_to_dense_mode: false
    database:
      ## Use an external database connection string here, or deploy mysql using this chart with mysql.enabled
      ## mysql:     "mysql://<USERNAME>:<PASSWORD>@tcp(<HOST>:3306)/<DATABASE_NAME>"
      ## sqlite:    "sqlite3:///tmp/buildbuddy-enterprise.db"
      data_source: "" # Either set this or mysql.enabled, not both!
    storage:
      ttl_seconds: 2592000 # 30 days
      # ttl_seconds: 0  # Do not TTL build events.
      chunk_file_size_bytes: 3000000 # 3 MB
      disk:
        root_directory: "/data/buildbuddy/blobs/" # Enabled disk.data volume above to use
      # gcs:
      #   bucket: "buildbuddy_blobs"
      #   project_id: "my-gc-project"
      #   credentials_file: "my-volume/my-google-credentials.json"
    cache:
      disk:
        root_directory: "/data/buildbuddy/cache/" # Enabled disk.data volume above to use
      max_size_bytes: 10000000000 # 10 GB
      # redis_target: # ENTERPRISE ONLY
      #   - "10.10.100.10:6379"
      # gcs: # ENTERPRISE ONLY
      #   bucket: "buildbuddy_cache"
      #   project_id: "my-gc-project"
      #   credentials_file: "my-volume/my-google-credentials.json"
      #   ttl_days: 30
    ssl:
      enable_ssl: false
      # use_acme: true # Use acme for letsencrypt ssl certs if you point your domains at LoadBalancer without an ingress.
      # host_whitelist: # Host whitelist to enable acme for
      #   - buildbuddy.example.com
      #   - buildbuddy-grpc.example.com
    # integrations:
    #   slack:
    #     webhook_url: "https://hooks.slack.com/services/MY/WEBHOOK/URL"
    # auth: # ENTERPRISE ONLY
    #   oauth_providers:
    #     - issuer_url: "https://accounts.google.com" # OIDC compatible discovery url
    #       client_id: "MY_CLIENT_ID"
    #       client_secret: "MY_CLIENT_SECRET"
    # api: # ENTERPRISE ONLY
    #   enable_api: true
    # github: # ENTERPRISE ONLY
    #   client_id: MY_CLIENT_ID
    #   client_secret: MY_CLIENT_SECRET

  ## Additional env vars
  extraEnvVars: []

  ## Additional init containers
  extraInitContainers: []

  # Add additional volumes and mounts
  extraVolumes: []
  extraVolumeMounts: []

  ## Container image that is used to ping mysql until it's up.
  initContainerImage:
    repository: appropriate/curl
    tag: latest
    imagePullPolicy: IfNotPresent

  ## Strategy used to replace pods in Deployment
  deploymentType: RollingUpdate

# common-res:
#   ## @param common-res.enabled Toggle for enabling or disabling chatbot ui resources.
#   ##
#   enabled: true
#   Deployment:
#     items:
#       _:
#         ## @param common-res.Deployment.items._.replicas Number of desired pods. Disable this if HPA is enabled
#         ##
#         replicas: 1
#         ## @param common-res.Deployment.items._.revisionHistoryLimit ReplicaSet revision history limit
#         ##
#         revisionHistoryLimit: 3
#         strategy:
#           ## @param common-res.Deployment.items._.strategy.type Set the controller upgrade strategy
#           ## For Deployments, valid values are Recreate (default) and RollingUpdate.
#           ##
#           type: "RollingUpdate"
#           ## RollingUpdate strategy configuration
#           ##
#           rollingUpdate:
#             ## @param common-res.Deployment.items._.strategy.rollingUpdate.maxUnavailable Set deployment RollingUpdate max unavailable
#             ##
#             maxUnavailable: "66%"
#             ## @param common-res.Deployment.items._.strategy.rollingUpdate.maxSurge Set deployment RollingUpdate max surge
#             ##
#             maxSurge: "33%"
#         ## @param common-res.Deployment.items._.selector Additional selectors for the deployment
#         ##
#         selector: {}
#         ## Pod spec template (to generate spec.template)
#         ##
#         podSpec:
#           spec:
#             ## @param common-res.Deployment.items._.podSpec.spec.automountServiceAccountToken Automount Service account token
#             ##
#             automountServiceAccountToken: false
#             ## @param common-res.Deployment.items._.podSpec.spec.restartPolicy Restart policy for the pod
#             restartPolicy: Always
#             ## Configure the Security Context for the Pod
#             securityContext:
#               ## @param common-res.Deployment.items._.podSpec.spec.securityContext.fsGroup Specify the default fs group id
#               ##
#               fsGroup: 1000
#               ## @param common-res.Deployment.items._.podSpec.spec.securityContext.supplementalGroups Specify the additional groups
#               ##
#               supplementalGroups: []
#               ## @param common-res.Deployment.items._.podSpec.spec.securityContext.fsGroupChangePolicy Specify the default gs group change policy
#               ##
#               fsGroupChangePolicy: OnRootMismatch
#             ## Containers configuration
#             containers:
#               ## @param common-res.Deployment.items._.podSpec.spec.containers[0].name
#               ##
#               - name: chabot-ui
#                 ## @param common-res.Deployment.items._.podSpec.spec.containers[0].image
#                 ##
#                 image: ghcr.io/mckaywrigley/chatbot-ui:main
#                 ## @param common-res.Deployment.items._.podSpec.spec.containers[0].imagePullPolicy Container image pullPolicy. Allowed values: `IfNotPresent`, `Always`, `Never`
#                 ##
#                 imagePullPolicy: IfNotPresent
#                 ## @param common-res.Deployment.items._.podSpec.spec.containers[0].tty Determines whether containers in a pod runs with TTY enabled.
#                 ##
#                 tty: false
#                 ## @param common-res.Deployment.items._.podSpec.spec.containers[0].stdin Determines whether containers in a pod runs with stdin enabled.
#                 ##
#                 stdin: false
#                     ## Configure the Service port information here.
#                 ## Container ports configuration
#                 ##
#                 ports:
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].ports[0].name Name of the port
#                   ##
#                   - name: http
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].ports[0].containerPort The port number
#                     ##
#                     containerPort: 3000

#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].ports[0].protocol Port protocol. Allowed values: "SCTP", `TCP` and `UDP`.
#                     ##
#                     protocol: TCP
#                 ## Default Volume mounts
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[0].name
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[0].mountPath
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[0].readOnly
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[1].name
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[1].mountPath
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[1].readOnly
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[2].name
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[2].mountPath
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[2].readOnly
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[3].name
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[3].mountPath
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[3].readOnly
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[4].name
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[4].mountPath
#                 ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[4].readOnly
#                 ##
#                 volumeMounts:
#                   - name: devshm
#                     mountPath: /dev/shm
#                     readOnly: false
#                   - name: shared
#                     mountPath: /shared
#                     readOnly: false
#                   - name: appdata
#                     mountPath: /home/node
#                     readOnly: false
#                   - name: tmp
#                     mountPath: /tmp
#                     readOnly: false
#                   - name: varrun
#                     mountPath: /var/run
#                     readOnly: false
#                 ## Liveness probe configuration
#                 ##
#                 livenessProbe:
#                   httpGet:
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.httpGet.port Liveness probe port
#                     ##
#                     port: 3000
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.httpGet.scheme Liveness probe connection protocol
#                     ##
#                     scheme: HTTP
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.httpGet.path If a HTTP probe is used (default for HTTP/HTTPS services) this path is used
#                     ##
#                     path: "/"
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.initialDelaySeconds Initial delay in seconds
#                   ##
#                   initialDelaySeconds: 10
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.periodSeconds period in seconds
#                   ##
#                   periodSeconds: 10
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.timeoutSeconds Timeout in seconds
#                   ##
#                   timeoutSeconds: 5
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.failureThreshold max number of failures in a row for flagging pod as unhealthy
#                   ##
#                   failureThreshold: 5
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.successThreshold max number of successes in a row for flagging pod as healthy
#                   ##
#                   successThreshold: 1
#                 ## Readiness probe configuration
#                 ##
#                 readinessProbe:
#                   httpGet:
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.httpGet.port readiness probe port
#                     ##
#                     port: 3000
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.httpGet.scheme readiness probe connection protocol
#                     ##
#                     scheme: HTTP
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.httpGet.path If a HTTP probe is used (default for HTTP/HTTPS services) this path is used
#                     ##
#                     path: "/"
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.initialDelaySeconds Initial delay in seconds
#                   ##
#                   initialDelaySeconds: 10
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.periodSeconds period in seconds
#                   ##
#                   periodSeconds: 10
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.timeoutSeconds Timeout in seconds
#                   ##
#                   timeoutSeconds: 5
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.failureThreshold max number of failures in a row for flagging pod as not ready
#                   ##
#                   failureThreshold: 5
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.successThreshold max number of successes in a row for flagging pod as ready
#                   ##
#                   successThreshold: 2
#                 ## Startup probe configuration
#                 ##
#                 startupProbe:
#                   tcpSocket:
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.tcpSocket.port startup probe port
#                     ##
#                     port: 3000
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.initialDelaySeconds Initial delay in seconds
#                   ##
#                   initialDelaySeconds: 10
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.periodSeconds period in seconds
#                   ##
#                   periodSeconds: 5
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.timeoutSeconds Timeout in seconds
#                   ##
#                   timeoutSeconds: 2
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.failureThreshold max number of failures in a row for flagging pod as not started
#                   ##
#                   failureThreshold: 60
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.successThreshold max number of successes in a row for flagging pod as started
#                   ##
#                   successThreshold: 1
#                 ## Set the resource requests / limits for the main container.
#                 ##
#                 resources:
#                   ## Resource limits configuration
#                   ##
#                   limits:
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].resources.limits.cpu CPU limits
#                     ##
#                     cpu: "1"
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].resources.limits.memory Memory limits
#                     ##
#                     memory: 512Mi
#                   ## Resource Requests configurations
#                   ##
#                   requests:
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].resources.requests.cpu CPU requests
#                     ##
#                     cpu: "1"
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].resources.requests.memory Memory requests
#                     ##
#                     memory: 512Mi
#                 ## Security context configuration
#                 ##
#                 securityContext:
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.runAsGroup Specify the default user group id
#                   ##
#                   runAsGroup: 1000
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.runAsUser Specify the default user id
#                   ##
#                   runAsUser: 1000
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.privileged Privileged mode true or false. Allowed values: `true` or `false`
#                   ##
#                   privileged: false
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.readOnlyRootFilesystem Access level for the file system.  Allowed values: `true` or `false`
#                   ##
#                   readOnlyRootFilesystem: true
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.allowPrivilegeEscalation Allow escalation of privileges true or false. Allowed values: `true` or `false`
#                   ##
#                   allowPrivilegeEscalation: false
#                   ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.runAsNonRoot Run the process as root, true or false. Allowed values: `true` or `false`
#                   ##
#                   runAsNonRoot: true
#                   seccompProfile:
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.seccompProfile.type Seccomp profile type
#                     ##
#                     type: RuntimeDefault
#                   ## Linux pod capabilities configurations
#                   ## https://man7.org/linux/man-pages/man7/capabilities.7.html
#                   ##
#                   capabilities:
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.capabilities.drop Capabilities to drop
#                     ##
#                     drop:
#                       - ALL
#                     ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.capabilities.add Capabilities to add
#                     ##
#                     add: []
#                 ## Env configuration
#                 ## @param common-res.Deployment.items._.podSpec.spec.containers[0].envFrom[0].configMapRef.name ConfigMap name Ref
#                 ## @param common-res.Deployment.items._.podSpec.spec.containers[0].envFrom[1].secretRef.name Secret name Ref
#                 ##
#                 envFrom:
#                   - configMapRef:
#                       name: '{{ include "common-gitops.names.release" . }}'
#                   - secretRef:
#                       name: '{{ include "common-gitops.names.release" . }}'
#             ## Pod Volumes configuration
#             ## @skip common-res.Deployment.items._.podSpec.spec.volumes[0].name
#             ## @skip common-res.Deployment.items._.podSpec.spec.volumes[0].emptyDir.medium
#             ## @skip common-res.Deployment.items._.podSpec.spec.volumes[1].name
#             ## @skip common-res.Deployment.items._.podSpec.spec.volumes[1].emptyDir.medium
#             ## @skip common-res.Deployment.items._.podSpec.spec.volumes[2].name
#             ## @skip common-res.Deployment.items._.podSpec.spec.volumes[2].emptyDir
#             ## @skip common-res.Deployment.items._.podSpec.spec.volumes[3].name
#             ## @skip common-res.Deployment.items._.podSpec.spec.volumes[3].emptyDir
#             ## @skip common-res.Deployment.items._.podSpec.spec.volumes[4].name
#             ## @skip common-res.Deployment.items._.podSpec.spec.volumes[4].emptyDir
#             volumes:
#               - name: devshm
#                 emptyDir:
#                   medium: Memory
#               - name: varrun
#                 emptyDir:
#                   medium: Memory
#               - name: shared
#                 emptyDir: {}
#               - name: tmp
#                 emptyDir: {}
#               - name: appdata
#                 emptyDir: {}

#   ## Serviceaccount configuration
#   ## @default -- See below
#   ##
#   ServiceAccount:
#     ## ServiceAccount configuration for main pod
#     ##
#     items:
#       _:
#         ## @param common-res.ServiceAccount.items._.enabled Specifies whether a service account should be created. Allowed values: `true` or `false`
#         ##
#         enabled: true

#   ## Create secret objects directly from dict.
#   ##
#   Secret:
#     ## @param common-res.Secret.enabled Enable or Disable the secret from being created. Allowed values: `true` or `false`
#     ##
#     enabled: true

#     ## Chatbot UI Secret. Use this secret if you are not using external-secrets addon to fetch secret
#     ##
#     items:
#       _:
#         stringData:
#           ## @param common-res.Secret.items._.stringData.OPENAI_API_KEY OpenAI backend endpoint URL
#           ## Ref: https://platform.openai.com/account/api-keys
#           ##
#           OPENAI_API_KEY: "YOUR_OPENAI_API_KEY"
#           ## @param common-res.Secret.items._.stringData.OPENAI_ORGANIZATION OpenAI Org ID
#           ## Ref: https://platform.openai.com/account/org-settings
#           ##
#           OPENAI_ORGANIZATION: "YOUR_OPENAI_ORGANIZATION_ID"
#           ## @param common-res.Secret.items._.stringData.AZURE_DEPLOYMENT_ID
#           ## Ref: https://learn.microsoft.com/en-us/azure/ai-services/openai/reference#completions
#           ##
#           AZURE_DEPLOYMENT_ID: ""
#           ## @param common-res.Secret.items._.stringData.GOOGLE_API_KEY Google API key
#           ## Ref: https://developers.google.com/custom-search/v1/overview#api_key
#           ##
#           GOOGLE_API_KEY: ""
#           ## @param common-res.Secret.items._.stringData.GOOGLE_CSE_ID Google Search Engine ID
#           ## Ref: https://developers.google.com/custom-search/v1/overview#search_engine_id
#           ##
#           GOOGLE_CSE_ID: ""

#   ## Configure configMaps for the chart here.
#   ##
#   ConfigMap:
#     ## @param common-res.ConfigMap.enabled Enable or Disable the configmap from being created. Allowed values: `true` or `false`
#     ##
#     enabled: true
#     ## Chatbot UI config variables
#     ##
#     items:
#       _:
#         data:
#           ## @param common-res.ConfigMap.items._.data.OPENAI_API_HOST OpenAI API Host
#           ## For azure use: https://<endpoint>.openai.azure.com
#           ##
#           OPENAI_API_HOST: "https://api.openai.com"
#           ## @param common-res.ConfigMap.items._.data.OPENAI_API_TYPE Allowed values: `openai` or `azure`
#           ##
#           OPENAI_API_TYPE: "openai"
#           ## @param common-res.ConfigMap.items._.data.OPENAI_API_VERSION OpenAI API Version for Azure deployment. Only applicable for Azure OpenAI
#           ##
#           OPENAI_API_VERSION: "" # 2023-03-15-preview
#           ## @param common-res.ConfigMap.items._.data.DEFAULT_MODEL The default model to use on new conversations, for Azure use gpt-35-turbo
#           ##
#           DEFAULT_MODEL: "gpt-3.5-turbo"
#           ## @param common-res.ConfigMap.items._.data.NEXT_PUBLIC_DEFAULT_SYSTEM_PROMPT OpenAI System prompt
#           ##
#           NEXT_PUBLIC_DEFAULT_SYSTEM_PROMPT: "You are ChatGPT, a large language model trained by OpenAI. Follow the user's instructions carefully. Respond using markdown."
#           ## @param common-res.ConfigMap.items._.data.NEXT_PUBLIC_DEFAULT_TEMPERATURE The default temperature to use on new conversations
#           ## Use -1 for fun ;-)
#           NEXT_PUBLIC_DEFAULT_TEMPERATURE: "1"

#   ## Configure the services for the chart here.
#   ## Additional services can be added by adding a dictionary key similar to the 'main' service.
#   ## @default -- See below
#   Service:
#     ## Service configuration for main pod
#     ##
#     items:
#       _:
#         ## @param common-res.Service.items._.enabled Enables or disables the service
#         ##
#         enabled: true
#         spec:
#           ## @param common-res.Service.items._.spec.selector Additional selectors
#           ##
#           selector: {}

#           ## @param common-res.Service.items._.spec.type Set the service type
#           # Options: Simple(Loadbalancer), LoadBalancer, ClusterIP, NodePort
#           ##
#           type: ClusterIP

#           ## @param common-res.Service.items._.spec.ipFamilyPolicy Specify the ip policy. Options: SingleStack, PreferDualStack, RequireDualStack
#           ##
#           ipFamilyPolicy: SingleStack

#           ## Configure the Service port information here.
#           ## Additional ports can be added by adding a dictionary key similar to the 'http' service.
#           ## @default -- See below
#           ##
#           ports:
#             ## @param common-res.Service.items._.spec.ports[0].name The port number
#             ##
#             - name: http
#               ## @param common-res.Service.items._.spec.ports[0].port The port number
#               ##
#               port: 3000

#               ## @param common-res.Service.items._.spec.ports[0].protocol Port protocol. Allowed values: `TCP`, `SCTP` or `UDP`.
#               ##
#               protocol: TCP

#               ## @param common-res.Service.items._.spec.ports[0].targetPort Specify a service targetPort if you wish to differ the service port from the application port.
#               ## If `targetPort` is specified, this port number is used in the container definition instead of
#               ## the `port` value. Therefore named ports are not supported for this field.
#               ##
#               targetPort: 3000

#   ## Configure the ingresses for the chart here.
#   ## Additional ingresses can be added by adding a dictionary key similar to the 'main' ingress.
#   ## @default -- See below
#   ##
#   Ingress:
#     ## @param common-res.Ingress.enabled Enable or disable the ingress
#     ##
#     enabled: true
#     ## Configure the main ingress for main deployment service
#     ##
#     items:
#       _:
#         ## Provide additional annotations which may be required.
#         ##
#         annotations:
#           # cert-manager.io/acme-challenge-type: dns01
#           # cert-manager.io/acme-dns01-provider: route53
#           # cert-manager.io/cluster-issuer: my-domain-cluster-issuer
#           # kubernetes.io/tls-acme: "true"
#           ## @param common-res.Ingress.items._.annotations.kubernetes.io/ingress.allow-http Enable or disable non ssl connection on the ingress
#           kubernetes.io/ingress.allow-http: "false"
#           ## @param common-res.Ingress.items._.annotations.nginx.ingress.kubernetes.io/backend-protocol Backend protocol. Must match with backend service protocol
#           nginx.ingress.kubernetes.io/backend-protocol: HTTP
#           ## @param common-res.Ingress.items._.annotations.nginx.ingress.kubernetes.io/preserve-trailing-slash Enable or disable preservation of trailing slash
#           nginx.ingress.kubernetes.io/preserve-trailing-slash: "false"
#           ## @param common-res.Ingress.items._.annotations.nginx.ingress.kubernetes.io/server-snippet Additional nginx configurations using server-snippet annotation
#           nginx.ingress.kubernetes.io/server-snippet: |
#             proxy_ssl_verify off;
#             proxy_set_header X-Forwarded-Proto https;
#           ## @param common-res.Ingress.items._.annotations.nginx.ingress.kubernetes.io/ssl-redirect Enable or disable redirecting users from non ssl to ssl URL
#           nginx.ingress.kubernetes.io/ssl-redirect: "true"

#         ## @param common-res.Ingress.items._.labels Set labels on the deployment
#         # -- Provide additional labels which may be required.
#         ##
#         labels: {}
#         spec:
#           ## @param common-res.Ingress.items._.spec.ingressClassName Set the ingressClass that is used for this ingress.
#           ## Requires Kubernetes >=1.19
#           ##
#           ingressClassName: "" # "nginx"

#           ## Configure the hosts for the ingress
#           ##
#           rules:
#             ## @param common-res.Ingress.items._.spec.rules[0].host Host address. Helm template can be passed.
#             ##
#             - host: chatbot-ui.dnsname.local
#               ## Configure the paths for the host
#               ##
#               http:
#                 paths:
#                   ## @param common-res.Ingress.items._.spec.rules[0].http.paths[0].path Path.  Helm template can be passed.
#                   ##
#                   - path: /
#                     ## @param common-res.Ingress.items._.spec.rules[0].http.paths[0].pathType Ignored if not kubeVersion >= 1.14-0
#                     ##
#                     pathType: Prefix
#                     ## Service configuration for the host
#                     ##
#                     backend:
#                       service:
#                         ## @param common-res.Ingress.items._.spec.rules[0].http.paths[0].backend.service.name Overrides the service name reference for this path
#                         ##
#                         name: '{{ include "common-gitops.names.release" . }}'
#                         ## @param common-res.Ingress.items._.spec.rules[0].http.paths[0].backend.service.port.number Overrides the service port reference for this path
#                         ##
#                         port:
#                           number: 3000

#           ## Configure TLS for the ingress. Both secretName and hosts can process a Helm template.
#           ## @param common-res.Ingress.items._.spec.tls[0].secretName Name of the tls secret to use
#           ## @param common-res.Ingress.items._.spec.tls[0].hosts List of virtual hosts to match
#           ##
#           tls:
#             - secretName: tls-chatbot-ui.dnsname.local
#               hosts:
#                 - chatbot-ui.dnsname.local

#   ## HPA configuration
#   ##
#   HorizontalPodAutoscaler:
#     ## @param common-res.HorizontalPodAutoscaler.enabled Toggle for enabling or disabling template.
#     ##
#     enabled: false
#     ## Main deployment HPA settings
#     ##
#     items:
#       _:
#         spec:
#           ## Scale Target
#           ##
#           scaleTargetRef:
#             ## @param common-res.HorizontalPodAutoscaler.items._.spec.scaleTargetRef.apiVersion Target kind API Version
#             ##
#             apiVersion: apps/v1
#             ## @param common-res.HorizontalPodAutoscaler.items._.spec.scaleTargetRef.kind Target kind
#             ##
#             kind: Deployment
#             ## @param common-res.HorizontalPodAutoscaler.items._.spec.scaleTargetRef.name Target kind name
#             ##
#             name: '{{ include "common-gitops.names.release" . }}'
#           ## @param common-res.HorizontalPodAutoscaler.items._.spec.minReplicas minimum amount of replica's to spawn
#           ## default -- 1
#           ##
#           minReplicas: "1"
#           ## @param common-res.HorizontalPodAutoscaler.items._.spec.maxReplicas maximum amount of replica's to spawn
#           ## default -- 10
#           ##
#           maxReplicas: "10"
#           ## Target metrics
#           ##
#           metrics:
#             ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].type Metrics type
#             ##
#             - type: Resource
#               resource:
#                 ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].resource.name resource name of the metric
#                 ##
#                 name: cpu
#                 target:
#                   ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].resource.target.type Metric target type for the resource
#                   ##
#                   type: Utilization
#                   ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].resource.target.averageUtilization Average utilization value
#                   ##
#                   averageUtilization: 80
#             ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[1].type Metrics type
#             ##
#             - type: Resource
#               resource:
#                 ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[1].resource.name resource name of the metric
#                 ##
#                 name: memory
#                 target:
#                   ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[1].resource.target.type Metric target type for the resource
#                   ##
#                   type: Utilization
#                   ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[1].resource.target.averageUtilization Average utilization value
#                   ##
#                   averageUtilization: 80
