---
## @section Global parameters
## Global parameters
## These variables are accessible to all dependency helm charts.
##

global:
  ## @param global.chartNameOverride Overrides the chart name.
  ##
  chartNameOverride: ""
  ## @param global.releaseNameOverride Overrides the release name.
  ##
  releaseNameOverride: ""
  ## @param global.tags Define common tags for all IAC and app resources generated by this chart.
  ##
  tags: {}
  ## @param global.labels Define common labels for all IAC and app resources generated by this chart.
  ##
  labels: {}
  ## @param global.annotations Define common annotations for all IAC and app resources generated by this chart.
  ##
  annotations: {}
  ## @param global.ingressClassName Ingress Classname
  ##
  ingressClassName: 'nginx'
  ## @param global.ingressUrl Ingress URL
  ##
  ingressUrl: 'demo-filestash.luminarinfra.com'
  ## @param global.storageClassName  Storage class name
  ##
  storageClassName: 'gp3'
  ## @param global.clusterIssuer  Cluster issuer
  ##
  clusterIssuer: 'luminarinfra-com'


## @skip common-res
common-res:
  enabled: false
  PersistentVolumeClaim:
    items:
      _:
        name: '{{ include "common-gitops.names.release" . }}-state'
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
          storageClassName: "{{ .Values.global.storageClassName }}"

  Deployment:
    items:
      _:
        replicas: 1
        revisionHistoryLimit: 3
        strategy:
          type: "RollingUpdate"
          rollingUpdate:
            maxUnavailable: "66%"
            maxSurge: "33%"
        selector: {}
        podSpec:
          spec:
            automountServiceAccountToken: false
            restartPolicy: Always
            securityContext:
              fsGroup: 1000
              supplementalGroups: []
              fsGroupChangePolicy: OnRootMismatch
            containers:
              - name: filestash-app
                image: machines/filestash
                imagePullPolicy: IfNotPresent
                tty: false
                stdin: false
                ports:
                  - name: http
                    containerPort: 80
                    protocol: TCP
                volumeMounts:
                  - name: devshm
                    mountPath: /dev/shm
                    readOnly: false
                  - name: shared
                    mountPath: /shared
                    readOnly: false
                  - name: tmp
                    mountPath: /tmp
                    readOnly: false
                  - name: varrun
                    mountPath: /var/run
                    readOnly: false
                  - name: '{{ include "common-gitops.names.release" . }}-state'
                    mountPath: /app/data/state
                    readOnly: false
                livenessProbe:
                  httpGet:
                    port: 80
                    scheme: HTTP
                    path: "/"
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 5
                  successThreshold: 1
                readinessProbe:
                  httpGet:
                    port: 80
                    scheme: HTTP
                    path: "/"
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 5
                  successThreshold: 2
                startupProbe:
                  tcpSocket:
                    port: 80
                  initialDelaySeconds: 10
                  periodSeconds: 5
                  timeoutSeconds: 2
                  failureThreshold: 60
                  successThreshold: 1
                resources:
                  limits:
                    cpu: "1"
                    memory: 512Mi
                  requests:
                    cpu: "1"
                    memory: 512Mi
                securityContext:
                  runAsGroup: 1000
                  runAsUser: 1000
                  privileged: false
                  readOnlyRootFilesystem: true
                  allowPrivilegeEscalation: false
                  runAsNonRoot: true
                  seccompProfile:
                    type: RuntimeDefault
                  ## Linux pod capabilities configurations
                  ## https://man7.org/linux/man-pages/man7/capabilities.7.html
                  ##
                  capabilities:
                    drop:
                      - ALL
                    add: []
                envFrom:
                  - configMapRef:
                      name: '{{ include "common-gitops.names.release" . }}'
            volumes:
              - name: devshm
                emptyDir:
                  medium: Memory
              - name: varrun
                emptyDir:
                  medium: Memory
              - name: shared
                emptyDir: {}
              - name: tmp
                emptyDir: {}
              - name: '{{ include "common-gitops.names.release" . }}-state'
                persistentVolumeClaim:
                  claimName: '{{ include "common-gitops.names.release" . }}-state'

  ServiceAccount:
    items:
      _:
        enabled: true

  Service:
    items:
      _:
        enabled: true
        spec:
          selector: {}
          type: ClusterIP
          ports:
            - name: http
              port: 8334
              protocol: TCP
              targetPort: http

  Ingress:
    enabled: true
    items:
      _:
        annotations:
          cert-manager.io/acme-challenge-type: dns01
          cert-manager.io/acme-dns01-provider: route53
          cert-manager.io/cluster-issuer: "{{ .Values.global.clusterIssuer }}"
          kubernetes.io/tls-acme: "true"
          kubernetes.io/ingress.allow-http: "false"
          nginx.ingress.kubernetes.io/backend-protocol: HTTP
          nginx.ingress.kubernetes.io/preserve-trailing-slash: "false"
          nginx.ingress.kubernetes.io/server-snippet: |
            proxy_ssl_verify off;
            proxy_set_header X-Forwarded-Proto https;
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          # choosing 10G to accomodate possible large requests
          nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        labels: {}
        spec:
          ingressClassName: "{{ .Values.global.ingressClassName }}"
          rules:
            - host: "{{ .Values.global.ingressUrl }}"
              http:
                paths:
                  - path: /
                    pathType: Prefix
                    backend:
                      service:
                        name: '{{ include "common-gitops.names.release" . }}'
                        port:
                          number: 8334
          tls:
            - secretName: tls-{{ .Values.global.ingressUrl }}
              hosts:
                - "{{ .Values.global.ingressUrl }}"
