global:
  providerConfigRef:
    name: 'crossplane-provider-config-aws-infra-dev'
  awsAccountId: '550094566655'
  awsRegion: 'us-east-2'
  githubPatKeyName: 'pat'
  githubPatSecretName: 'infra-dev-gh-satish-labs'
  baseDomain: 'satishweb.com'
  secretStoreRef: 'cluster-secret-store-aws'
  environment: 'infra-dev'
  team: 'infra'
  eventSourceServicePort: '11000'
  githubRepoName: 'gitops-infra-demo'
  githubOrg: 'satish-labs'
  ingressClassNameExternal: 'nginx-ingress-external'
  imagePullSecrets: [{name: "infra-dev-dockerhub-creds"}]
  githubAppID: "379709"
  githubAppInstallationID: "41004866"
external-secrets:
  enabled: true
  AWSExternalSecret:
    enabled: true
Events:
  items:
    pull-requests:
      eventSources:
        # dict of one or more event sources
        default:
          eventFilter:
            - 'pull_request'
            - 'ping'
          githubApp:
            enabled: true
          apiToken:
            enabled: false
          payloadFilters:
            # Name of the event that triggered the delivery: [pull_request, push, yadayadayada]
            # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads
            - path: headers.X-Github-Event
              type: string
              value:
                - pull_request
            - path: body.action
              type: string
              value:
                - opened
                - labeled
                - reopened
                - edited
                - synchronize
            - path: body.pull_request.state
              type: string
              value:
                - open
            - path: body.pull_request.base.ref
              type: string
              value:
                - main
        reviews:
          eventFilter:
            - 'pull_request_review'
            - 'ping'
          githubApp:
            enabled: true
          apiToken:
            enabled: false
          payloadFilters:
            - path: headers.X-Github-Event
              type: string
              value:
                - pull_request_review
            - path: body.action
              type: string
              value:
                - submitted
                - edited
            - path: body.pull_request.state
              type: string
              value:
                - open
            - path: body.review.state
              type: string
              value:
                - APPROVED
            - path: body.pull_request.base.ref
              type: string
              value:
                - main
      triggers:
        # dict of one or more triggers in the eventgroup
        default:
          templateType: k8s
          source:
            namespace: 'test-gitops-infra-demo-pr-{{ "{{" }} .Input.body.number {{ "}}" }}'
            volumes:
              - name: vcluster-secret
                secret:
                  secretName: "vc-vcluster"
                  items:
                    - key: config
                      path: kubeconfig
            workflowArgumentParameters:
              - name: giturl
              - name: pullRequestNo
              - name: pullRequestBranch
              - name: githubRepoName
              - name: githubOrg
              - name: author
              - name: target
                value: cwt-add-vcluster-to-argo-cd
              - name: argocd-version
                value: "v2.5.5"
            workflowTemplateRef:
              enabled: true
              clusterScope: true
          parameters:
            - dataTemplate: '.Input.body.repository.ssh_url'
              # Example: git@github.com:satish-labs/gitops-infra-demo.git
              dest: 'spec.arguments.parameters.0.value'
            - dataTemplate: '.Input.body.number'
              # Example: 50
              dest: 'spec.arguments.parameters.1.value'
            - dataTemplate: '.Input.body.pull_request.head.ref'
              # Example: gitops/branch-name
              dest: 'spec.arguments.parameters.2.value'
            - dataTemplate: '.Input.body.repository.name'
              # Example: gitops-infra-demo
              dest: 'spec.arguments.parameters.3.value'
            - dataTemplate: '.Input.body.organization.login'
              # Example: luminartech
              dest: 'spec.arguments.parameters.4.value'
            - dataTemplate: '.Input.body.pull_request.user.login'
              # Example: author
              dest: 'spec.arguments.parameters.5.value'
        reviews:
          templateType: k8s
          source:
            namespace: 'test-gitops-infra-demo-pr-{{ "{{" }} .Input.body.number {{ "}}" }}'
            workflowArgumentParameters:
              - name: giturl
              - name: prid
            workflowTemplateRef:
              enabled: true
              clusterScope: true
          parameters:
            - dataTemplate: '.Input.body.repository.ssh_url'
              dest: 'spec.arguments.parameters.0.value'
            - dataTemplate: '.Input.body.pull_request.id'
              dest: 'spec.arguments.parameters.1.value'
            - dataTemplate: '.Input.body.after'
              dest: 'metadata.name'
              operation: 'append'
EventSource:
  enabled: true
  items:
    _:
      enabled: true
EventBus:
  enabled: true
  items:
    _:
      enabled: true
Sensor:
  enabled: true
  items:
    _:
      enabled: true
      sensorContainerTemplate:
        env:
        - name: DEBUG_LOG
          value: 'true'
Ingress:
  enabled: true
  items:
    _:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/server-snippet: |
          proxy_ssl_verify off;
          proxy_set_header X-Forwarded-Proto https;
        kubernetes.io/ingress.allow-http: "false"
        kubernetes.io/tls-acme: "true"
        cert-manager.io/acme-challenge-type: dns01
        cert-manager.io/acme-dns01-provider: route53
        cert-manager.io/cluster-issuer: 'dev-satishweb-com'

common-res:
  enabled: true
  ServiceAccount:
    enabled: true

  ClusterRole:
    enabled: true

Secret:
  enabled: true
  items:
    _:
      enabled: true
crossplane-aws-secretsmanager:
  enabled: true
  Secret:
    enabled: true
