---
## @section Global parameters
## Global parameters
## These variables are accessible to all dependency helm charts.
##

global:
  ## @param global.chartNameOverride Overrides the chart name.
  ##
  chartNameOverride: ""
  ## @param global.releaseNameOverride Overrides the release name.
  ##
  releaseNameOverride: ""
  ## @param global.tags Define common tags for all IAC and app resources generated by this chart.
  ##
  tags: {}
  ## @param global.labels Define common labels for all IAC and app resources generated by this chart.
  ##
  labels: {}
  ## @param global.annotations Define common annotations for all IAC and app resources generated by this chart.
  ##
  annotations: {}
  ## @param global.environment Application environment
  ##
  environment: 'dev'
  ## @param global.IAMRole Default IAM role ARN for pod
  ##
  IAMRole: "arn:aws:iam::AWS-ACCOUNT-ID:role/IAM-ROLE-NAME"
  ## @param global.persistentDataDiskSize Persistent volume size for the pod
  ##
  persistentDataDiskSize: 10Gi
  ## @param global.storageClassName Persistent volume claim class
  ##
  storageClassName: gp3-persistent-125
  images:
    ## @param global.images.devcontainer Devcontainer image
    ##
    devcontainer: "satishweb/devops-tools:latest"
  env:
    ## @param global.env.FIXUID Fix UID for the persistent volume mount
    ##
    FIXUID: "1000"
    ## @param global.env.FIXGID Fix GID for the persistent volume mount
    ##
    FIXGID: "1000"
    ## @param global.env.HOME Default home directory path for the container
    ##
    HOME: "/persistent-data"

## @section Devspace configurations
##

common-res:
  ## @param common-res.enabled Toggle for enabling or disabling chatbot ui resources.
  ##
  enabled: true
  Pod:
    items:
      _:
        ## @skip common-res.Pod.items._.labels
        ##
        labels:
          app.kubernetes.io/instance: "{{ .Release.Name }}"
        spec:
          ## @param common-res.Pod.items._.spec.automountServiceAccountToken Automount Service account token
          ##
          automountServiceAccountToken: false
          ## @param common-res.Pod.items._.spec.restartPolicy Restart policy for the pod
          restartPolicy: Never
          ## Configure the Security Context for the Pod
          securityContext:
            ## @param common-res.Pod.items._.spec.securityContext.fsGroup Specify the default fs group id
            ##
            fsGroup: 1000
            ## @param common-res.Pod.items._.spec.securityContext.supplementalGroups Specify the additional groups
            ##
            supplementalGroups: []
            ## @param common-res.Pod.items._.spec.securityContext.fsGroupChangePolicy Specify the default gs group change policy
            ##
            fsGroupChangePolicy: OnRootMismatch
          ## Init Containers configuration
          ## @skip common-res.Pod.items._.spec.initContainers
          ##
          initContainers:
            - name: volume-init
              image: '{{ .Values.global.images.devcontainer }}'
              command:
                - /bin/bash
                - -x
                - /init-script.sh
              securityContext:
                runAsUser: 0  # Run as root user to setup disks
                allowPrivilegeEscalation: true  # Allow privilege escalation if necessary
              volumeMounts:
                - name: persistent-data
                  mountPath: "/persistent-data"
                  readOnly: false
                - name: scripts
                  mountPath: /init-script.sh
                  subPath: init-script.sh
                  readOnly: true
          ## Containers configuration
          ##
          containers:
            ## @param common-res.Pod.items._.spec.containers[0].name
            ##
            - name: container-0
              ## @param common-res.Pod.items._.spec.containers[0].image
              ##
              image: '{{ .Values.global.images.devcontainer }}'
              ## @param common-res.Pod.items._.spec.containers[0].imagePullPolicy Container image pullPolicy. Allowed values: `IfNotPresent`, `Always`, `Never`
              ##
              imagePullPolicy: IfNotPresent
              ## @param common-res.Pod.items._.spec.containers[0].tty Determines whether containers in a pod runs with TTY enabled.
              ##
              tty: true
              ## @param common-res.Pod.items._.spec.containers[0].stdin Determines whether containers in a pod runs with stdin enabled.
              ##
              stdin: true
              ## @skip common-res.Pod.items._.spec.containers[0].command
              ##
              command:
                - /bin/bash
                - -x
                - /entrypoint-script.sh

              ## Container ports configuration
              ##
              ports:
                ## @param common-res.Pod.items._.spec.containers[0].ports[0].name Name of the port
                ##
                - name: http
                  ## @param common-res.Pod.items._.spec.containers[0].ports[0].containerPort The port number
                  ##
                  containerPort: 8080

                  ## @param common-res.Pod.items._.spec.containers[0].ports[0].protocol Port protocol. Allowed values: "SCTP", `TCP` and `UDP`.
                  ##
                  protocol: TCP
              ## Default Volume mounts
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[0].name
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[0].mountPath
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[0].readOnly
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[1].name
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[1].mountPath
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[1].readOnly
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[2].name
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[2].mountPath
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[2].readOnly
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[3].name
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[3].mountPath
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[3].readOnly
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[4].name
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[4].mountPath
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[4].subPath
              ## @skip common-res.Pod.items._.spec.containers[0].volumeMounts[4].readOnly
              ##
              volumeMounts:
                - name: devshm
                  mountPath: /dev/shm
                  readOnly: false
                - name: persistent-data
                  mountPath: "/persistent-data"
                  readOnly: false
                - name: tmp
                  mountPath: /tmp
                  readOnly: false
                - name: varrun
                  mountPath: /var/run
                  readOnly: false
                - name: scripts
                  mountPath: /entrypoint-script.sh
                  subPath: entrypoint-script.sh
                  readOnly: true
              ## Environment variables configuration
              ## @skip common-res.Pod.items._.spec.containers[0].env
              env:  # Add environment variables here
                - name: HOME
                  value: "{{ .Values.global.env.HOME }}"
                - name: FIXUID
                  value: "{{ .Values.global.env.FIXUID }}"
                - name: FIXGID
                  value: "{{ .Values.global.env.FIXGID }}"
                - name: NAMESPACE
                  value: "{{ .Release.Namespace }}"
              ## Set the resource requests / limits for the main container.
              ##
              resources:
                ## Resource limits configuration
                ##
                limits:
                  ## @param common-res.Pod.items._.spec.containers[0].resources.limits.cpu CPU limits
                  ##
                  cpu: "1"
                  ## @param common-res.Pod.items._.spec.containers[0].resources.limits.memory Memory limits
                  ##
                  memory: 512Mi
                ## Resource Requests configurations
                ##
                requests:
                  ## @param common-res.Pod.items._.spec.containers[0].resources.requests.cpu CPU requests
                  ##
                  cpu: "1"
                  ## @param common-res.Pod.items._.spec.containers[0].resources.requests.memory Memory requests
                  ##
                  memory: 512Mi
              ## Security context configuration
              ##
              securityContext:
                ## @param common-res.Pod.items._.spec.containers[0].securityContext.runAsGroup Specify the default user group id
                ##
                runAsGroup: 1000
                ## @param common-res.Pod.items._.spec.containers[0].securityContext.runAsUser Specify the default user id
                ##
                runAsUser: 1000
                ## @param common-res.Pod.items._.spec.containers[0].securityContext.privileged Privileged mode true or false. Allowed values: `true` or `false`
                ##
                privileged: false
                ## @param common-res.Pod.items._.spec.containers[0].securityContext.readOnlyRootFilesystem Access level for the file system.  Allowed values: `true` or `false`
                ##
                readOnlyRootFilesystem: false
                ## @param common-res.Pod.items._.spec.containers[0].securityContext.allowPrivilegeEscalation Allow escalation of privileges true or false. Allowed values: `true` or `false`
                ##
                allowPrivilegeEscalation: true
                ## @param common-res.Pod.items._.spec.containers[0].securityContext.runAsNonRoot Run the process as root, true or false. Allowed values: `true` or `false`
                ##
                runAsNonRoot: true
                seccompProfile:
                  ## @param common-res.Pod.items._.spec.containers[0].securityContext.seccompProfile.type Seccomp profile type
                  ##
                  type: RuntimeDefault
                ## Linux pod capabilities configurations
                ## https://man7.org/linux/man-pages/man7/capabilities.7.html
                ##
                capabilities:
                  ## @param common-res.Pod.items._.spec.containers[0].securityContext.capabilities.drop Capabilities to drop
                  ##
                  drop:
                    - ALL
                  ## @param common-res.Pod.items._.spec.containers[0].securityContext.capabilities.add Capabilities to add
                  ##
                  add:
                    - SYS_ADMIN
                    - CAP_CHOWN
                    - CAP_KILL
                    - CAP_MKNOD
                    - CAP_PERFMON
                    - CAP_SETGID
                    - CAP_SETPCAP
          ## Pod Volumes configuration
          ## @skip common-res.Pod.items._.spec.volumes[0].name
          ## @skip common-res.Pod.items._.spec.volumes[0].emptyDir.medium
          ## @skip common-res.Pod.items._.spec.volumes[1].name
          ## @skip common-res.Pod.items._.spec.volumes[1].emptyDir.medium
          ## @skip common-res.Pod.items._.spec.volumes[2].name
          ## @skip common-res.Pod.items._.spec.volumes[2].emptyDir
          ## @skip common-res.Pod.items._.spec.volumes[3].name
          ## @skip common-res.Pod.items._.spec.volumes[3].persistentVolumeClaim.claimName
          ## @skip common-res.Pod.items._.spec.volumes[4].name
          ## @skip common-res.Pod.items._.spec.volumes[4].configMap.name
          volumes:
            - name: devshm
              emptyDir:
                medium: Memory
            - name: varrun
              emptyDir:
                medium: Memory
            - name: tmp
              emptyDir: {}
            - name: persistent-data
              persistentVolumeClaim:
                claimName: '{{ include "common-gitops.names.release" . }}'
            - name: scripts
              configMap:
                name: '{{ include "common-gitops.names.release" . }}'

  ## Configure configMaps for the chart here.
  ##
  ConfigMap:
    ## @param common-res.ConfigMap.enabled Enable or Disable the configmap from being created. Allowed values: `true` or `false`
    ##
    enabled: true
    ## Chatbot UI config variables
    ##
    items:
      _:
        data:
          ## @param common-res.ConfigMap.items._.data.init-script.sh
          ##
          ## TODO: These scripts will not be required after new developer container image version is released
          init-script.sh: |
            #!/bin/bash
            # Define the source and destination directories
            src_dir="/home/devops"
            dest_dir="/persistent-data"
            sed -i 's/DEVOPS/DEV-ENV/g' /home/devops/.zshrc || true
            # Define directories and files to be copied
            items_to_copy=(
                "$src_dir/.oh-my-zsh"
                "$src_dir/.cache"
                "$src_dir/.local"
                "$src_dir/.config"
                "$src_dir/.krew"
                "$src_dir/.aws_cli_functions"
                "$src_dir/.kubectl_aliases"
                "$src_dir/.tmux.conf"
                "$src_dir/.vimrc"
                "$src_dir/.wget-hsts"
                "$src_dir/.zshrc"
            )
            # Copy items if they don't exist in the destination
            for item in "${items_to_copy[@]}"; do
                if [ ! -e "$dest_dir/$(basename "$item")" ]; then
                    cp -rf "$item" "$dest_dir" || true
                fi
            done
            if [ ! -f "$dest_dir/.keep" ]; then
                touch "$dest_dir/.keep"
                chown -Rf 1000:1000 "$dest_dir"
            fi

          ## @param common-res.ConfigMap.items._.data.entrypoint-script.sh
          ##
          entrypoint-script.sh: |
            #!/bin/bash
            eval "$(/usr/local/bin/fixuid -q)" || true
            # Generate default gpg key without the password
            if [ ! -f ${HOME}/.gnupg/pubring.kbx ]; then
                gpg --batch --passphrase '' --quick-gen-key devops default default
            fi
            # Run gpg command to make sure gpg agent starts in a daemon mode.
            gpg --list-secret-keys >/dev/null 2>&1

            # Initialize pass manager with default gpg id
            if [ ! -f ${HOME}/.password-store/.gpg-id ]; then
                pass init $(gpg --list-keys devops|awk 'NR==2{print $1;exit}')
            fi
            sleep infinity
  ## PersistentVolumeClaim configuration
  ## @default -- See below
  ##
  PersistentVolumeClaim:
    ## @param common-res.PersistentVolumeClaim.enabled Specifies whether PersistentVolumeClaims should be created. Allowed values: `true` or `false`
    ##
    enabled: true
    ## @skip common-res.PersistentVolumeClaim.items
    ##
    items:
      _:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "{{ .Values.global.persistentDataDiskSize }}"
          storageClassName: "{{ .Values.global.storageClassName }}"
          volumeMode: Filesystem

  ## Serviceaccount configuration
  ## @default -- See below
  ##
  ServiceAccount:
    ## ServiceAccount configuration for main pod
    ##
    items:
      _:
        ## @param common-res.ServiceAccount.items._.enabled Specifies whether a service account should be created. Allowed values: `true` or `false`
        ##
        enabled: true
        annotations:
          ## @param common-res.ServiceAccount.items._.annotations.eks.amazonaws.com/role-arn The AWS IAM role ARN for service account of the pod
          ##
          eks.amazonaws.com/role-arn: '{{ .Values.global.IAMRoleARN }}'

  ## Kubernetes Role configuration
  ## @default -- See below
  ## @skip common-res.Role
  ##
  Role:
    enabled: true
    items:
      _:
        rules:
          - apiGroups:
            - ""
            resources:
              - pods
              - services
            verbs:
              - get
              - list
              - watch

  ## RoleBinding configuration
  ## @default -- See below
  ## @skip common-res.RoleBinding
  ##
  RoleBinding:
    enabled: true
    items:
      _:
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: '{{ include "common-gitops.names.release" . }}'
        subjects:
          - kind: ServiceAccount
            name: '{{ include "common-gitops.names.release" . }}'
            namespace: '{{ .Release.Namespace }}'

  ## Configure the services for the chart here.
  ## Additional services can be added by adding a dictionary key similar to the 'main' service.
  ## @default -- See below
  Service:
    ## Service configuration for main pod
    ##
    items:
      _:
        ## @param common-res.Service.items._.enabled Enables or disables the service
        ##
        enabled: true
        spec:
          ## @param common-res.Service.items._.spec.selector Additional selectors
          ##
          selector: {}

          ## @param common-res.Service.items._.spec.type Set the service type
          # Options: Simple(Loadbalancer), LoadBalancer, ClusterIP, NodePort
          ##
          type: ClusterIP

          ## @param common-res.Service.items._.spec.ipFamilyPolicy Specify the ip policy. Options: SingleStack, PreferDualStack, RequireDualStack
          ##
          ipFamilyPolicy: SingleStack

          ## Configure the Service port information here.
          ## Additional ports can be added by adding a dictionary key similar to the 'http' service.
          ## @default -- See below
          ##
          ports:
            ## @param common-res.Service.items._.spec.ports[0].name The port number
            ##
            - name: http
              ## @param common-res.Service.items._.spec.ports[0].port The port number
              ##
              port: 8080

              ## @param common-res.Service.items._.spec.ports[0].protocol Port protocol. Allowed values: `TCP`, `SCTP` or `UDP`.
              ##
              protocol: TCP

              ## @param common-res.Service.items._.spec.ports[0].targetPort Specify a service targetPort if you wish to differ the service port from the application port.
              ## If `targetPort` is specified, this port number is used in the container definition instead of
              ## the `port` value. Therefore named ports are not supported for this field.
              ##
              targetPort: 8080
