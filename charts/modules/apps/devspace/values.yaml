---
## @section Global parameters
## Global parameters
## These variables are accessible to all dependency helm charts.
##

global:
  ## @param global.chartNameOverride Overrides the chart name.
  ##
  chartNameOverride: ""
  ## @param global.releaseNameOverride Overrides the release name.
  ##
  releaseNameOverride: ""
  ## @param global.tags Define common tags for all IAC and app resources generated by this chart.
  ##
  tags: {}
  ## @param global.labels Define common labels for all IAC and app resources generated by this chart.
  ##
  labels: {}
  ## @param global.annotations Define common annotations for all IAC and app resources generated by this chart.
  ##
  annotations: {}
  ## @param global.environment Application environment
  ##
  environment: 'dev'
  ## @param global.IAMRole Default IAM role ARN for pod
  ##
  IAMRole: "arn:aws:iam::AWS-ACCOUNT-ID:role/IAM-ROLE-NAME"
  ## @param global.persistentDataDiskSize Persistent volume size for the pod
  ##
  persistentDataDiskSize: 10Gi
  ## @param global.storageClassName Persistent volume claim class
  ##
  storageClassName: gp3-persistent-125
  images:
    ## @param global.images.devcontainer Devcontainer image
    ##
    devcontainer: "satishweb/devops-tools:latest"
  env:
    ## @param global.env.FIXUID Fix UID for the persistent volume mount
    ##
    FIXUID: "1000"
    ## @param global.env.FIXGID Fix GID for the persistent volume mount
    ##
    FIXGID: "1000"
    ## @param global.env.HOME Default home directory path for the container
    ##
    HOME: "/persistent-data"

## @section Devspace configurations
##

common-res:
  ## @param common-res.enabled Toggle for enabling or disabling chatbot ui resources.
  ##
  enabled: true
  StatefulSet:
    items:
      _:
        ## @param common-res.StatefulSet.items._.replicas Number of desired pods. Disable this if HPA is enabled
        ##
        replicas: 0
        ## @param common-res.StatefulSet.items._.revisionHistoryLimit ReplicaSet revision history limit
        ##
        revisionHistoryLimit: 3
        ## @param common-res.StatefulSet.items._.selector Additional selectors for the deployment
        ##
        selector: {}
        ## @skip common-res.StatefulSet.items._.labels
        ##
        # labels:
        #   app.kubernetes.io/instance: "{{ .Release.Name }}"

        ## Pod spec template (to generate spec.template)
        ##
        podSpec:
          spec:
            ## @param common-res.StatefulSet.items._.podSpec.spec.automountServiceAccountToken Automount Service account token
            ##
            automountServiceAccountToken: false
            ## @param common-res.StatefulSet.items._.podSpec.spec.restartPolicy Restart policy for the pod
            restartPolicy: Always
            ## Configure the Security Context for the Pod
            securityContext:
              ## @param common-res.StatefulSet.items._.podSpec.spec.securityContext.fsGroup Specify the default fs group id
              ##
              fsGroup: 1000
              ## @param common-res.StatefulSet.items._.podSpec.spec.securityContext.supplementalGroups Specify the additional groups
              ##
              supplementalGroups: []
              ## @param common-res.StatefulSet.items._.podSpec.spec.securityContext.fsGroupChangePolicy Specify the default gs group change policy
              ##
              fsGroupChangePolicy: OnRootMismatch
            # Init Containers configuration
            # @skip common-res.StatefulSet.items._.podSpec.spec.initContainers
            #
            initContainers:
              - name: volume-init
                image: '{{ .Values.global.images.devcontainer }}'
                command:
                  - /bin/bash
                  - -ec
                  - |
                    dest_dir={{ .Values.global.env.HOME }}
                    if [ ! -f "$dest_dir/.keep" ]; then
                      touch "$dest_dir/.keep"
                      chown -Rf ${FIXUID}:${FIXGID} "$dest_dir"
                    fi
                    devspace_dir=/.devspace
                    mkdir -p "${devspace_dir}"
                    chown -Rf ${FIXUID}:${FIXGID} "${devspace_dir}"
                    sudo -u ${USER} /entrypoint.sh
                securityContext:
                  runAsUser: 0  # Run as root user to setup disks
                  allowPrivilegeEscalation: true  # Allow privilege escalation if necessary
                env:  # Add environment variables here
                  - name: HOME
                    value: "{{ .Values.global.env.HOME }}"
                  - name: USER
                    value: "ubuntu"
                  - name: FIXUID
                    value: "{{ .Values.global.env.FIXUID }}"
                  - name: FIXGID
                    value: "{{ .Values.global.env.FIXGID }}"
                volumeMounts:
                  - mountPath: "{{ .Values.global.env.HOME }}"
                    name: '{{ include "common-gitops.names.release" . }}'
                    readOnly: false
                  - name: devspace
                    mountPath: /.devspace
                    readOnly: false
            ## Containers configuration
            ##
            containers:
              ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].name
              ##
              - name: container-0
                ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].image
                ##
                image: '{{ .Values.global.images.devcontainer }}'
                ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].imagePullPolicy Container image pullPolicy. Allowed values: `IfNotPresent`, `Always`, `Never`
                ##
                imagePullPolicy: Always
                ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].tty Determines whether containers in a pod runs with TTY enabled.
                ##
                tty: true
                ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].stdin Determines whether containers in a pod runs with stdin enabled.
                ##
                stdin: true
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].command
                ##
                command: ["tail", "-f", "/dev/null"]
                ## Container ports configuration
                ##
                ports:
                  ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].ports[0].name Name of the port
                  ##
                  - name: http
                    ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].ports[0].containerPort The port number
                    ##
                    containerPort: 8080

                    ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].ports[0].protocol Port protocol. Allowed values: "SCTP", `TCP` and `UDP`.
                    ##
                    protocol: TCP
                ## Default Volume mounts
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[0].name
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[0].mountPath
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[0].readOnly
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[1].name
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[1].mountPath
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[1].readOnly
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[2].name
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[2].mountPath
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[2].readOnly
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[3].name
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[3].mountPath
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[3].readOnly
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[4].name
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[4].mountPath
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[4].subPath
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].volumeMounts[4].readOnly
                ##
                volumeMounts:
                  - name: devshm
                    mountPath: /dev/shm
                    readOnly: false
                  - mountPath: "{{ .Values.global.env.HOME }}"
                    name: '{{ include "common-gitops.names.release" . }}'
                    readOnly: false
                  - name: tmp
                    mountPath: /tmp
                    readOnly: false
                  - name: devspace
                    mountPath: /.devspace
                    readOnly: false
                  - name: varrun
                    mountPath: /var/run
                    readOnly: false
                ## Environment variables configuration
                ## @skip common-res.StatefulSet.items._.podSpec.spec.containers[0].env
                ##
                env:  # Add environment variables here
                  - name: HOME
                    value: "{{ .Values.global.env.HOME }}"
                  - name: USER
                    value: "ubuntu"
                  - name: FIXUID
                    value: "{{ .Values.global.env.FIXUID }}"
                  - name: FIXGID
                    value: "{{ .Values.global.env.FIXGID }}"
                  - name: NAMESPACE
                    value: "{{ .Release.Namespace }}"
                ## Set the resource requests / limits for the main container.
                ##
                resources:
                  ## Resource limits configuration
                  ##
                  limits:
                    ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].resources.limits.cpu CPU limits
                    ##
                    cpu: "1"
                    ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].resources.limits.memory Memory limits
                    ##
                    memory: 512Mi
                  ## Resource Requests configurations
                  ##
                  requests:
                    ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].resources.requests.cpu CPU requests
                    ##
                    cpu: "1"
                    ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].resources.requests.memory Memory requests
                    ##
                    memory: 512Mi
                ## Security context configuration
                ##
                securityContext:
                  ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].securityContext.runAsGroup Specify the default user group id
                  ##
                  runAsGroup: 1000
                  ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].securityContext.runAsUser Specify the default user id
                  ##
                  runAsUser: 1000
                  ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].securityContext.privileged Privileged mode true or false. Allowed values: `true` or `false`
                  ##
                  privileged: false
                  ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].securityContext.readOnlyRootFilesystem Access level for the file system.  Allowed values: `true` or `false`
                  ##
                  readOnlyRootFilesystem: false
                  ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].securityContext.allowPrivilegeEscalation Allow escalation of privileges true or false. Allowed values: `true` or `false`
                  ##
                  allowPrivilegeEscalation: true
                  ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].securityContext.runAsNonRoot Run the process as root, true or false. Allowed values: `true` or `false`
                  ##
                  runAsNonRoot: true
                  seccompProfile:
                    ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].securityContext.seccompProfile.type Seccomp profile type
                    ##
                    type: RuntimeDefault
                  ## Linux pod capabilities configurations
                  ## https://man7.org/linux/man-pages/man7/capabilities.7.html
                  ##
                  capabilities:
                    ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].securityContext.capabilities.drop Capabilities to drop
                    ##
                    drop:
                      - ALL
                    ## @param common-res.StatefulSet.items._.podSpec.spec.containers[0].securityContext.capabilities.add Capabilities to add
                    ##
                    add:
                      - SYS_ADMIN
                      - CAP_CHOWN
                      - CAP_KILL
                      - CAP_MKNOD
                      - CAP_PERFMON
                      - CAP_SETGID
                      - CAP_SETPCAP
            ## Pod Volumes configuration
            ## @skip common-res.StatefulSet.items._.podSpec.spec.volumes[0].name
            ## @skip common-res.StatefulSet.items._.podSpec.spec.volumes[0].emptyDir.medium
            ## @skip common-res.StatefulSet.items._.podSpec.spec.volumes[1].name
            ## @skip common-res.StatefulSet.items._.podSpec.spec.volumes[1].emptyDir.medium
            ## @skip common-res.StatefulSet.items._.podSpec.spec.volumes[2].name
            ## @skip common-res.StatefulSet.items._.podSpec.spec.volumes[2].emptyDir
            ## @skip common-res.StatefulSet.items._.podSpec.spec.volumes[3].name
            ## @skip common-res.StatefulSet.items._.podSpec.spec.volumes[3].persistentVolumeClaim.claimName
            ## @skip common-res.StatefulSet.items._.podSpec.spec.volumes[4].name
            ## @skip common-res.StatefulSet.items._.podSpec.spec.volumes[4].configMap.name
            volumes:
              - name: devshm
                emptyDir:
                  medium: Memory
              - name: varrun
                emptyDir:
                  medium: Memory
              - name: tmp
                emptyDir: {}
              - name: devspace
                emptyDir: {}
              # - name: persistent-data
              #   persistentVolumeClaim:
              #     claimName: '{{ include "common-gitops.names.release" . }}'
              # - name: scripts
              #   configMap:
              #     name: '{{ include "common-gitops.names.release" . }}'

        ## Storage Volume Claims
        ## @skip common-res.StatefulSet.items.storage.volumeClaimTemplates
        ##
        volumeClaimTemplates:
          - metadata:
              name: '{{ include "common-gitops.names.release" . }}'
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: "{{ .Values.global.persistentDataDiskSize }}"
              storageClassName: "{{ .Values.global.storageClassName }}"

  ## Serviceaccount configuration
  ## @default -- See below
  ##
  ServiceAccount:
    ## ServiceAccount configuration for main pod
    ##
    items:
      _:
        ## @param common-res.ServiceAccount.items._.enabled Specifies whether a service account should be created. Allowed values: `true` or `false`
        ##
        enabled: true
        annotations:
          ## @param common-res.ServiceAccount.items._.annotations.eks.amazonaws.com/role-arn The AWS IAM role ARN for service account of the pod
          ##
          eks.amazonaws.com/role-arn: '{{ .Values.global.IAMRoleARN }}'

  ## Kubernetes Role configuration
  ## @default -- See below
  ## @skip common-res.Role
  ##
  Role:
    enabled: true
    items:
      _:
        rules:
          - apiGroups:
            - ""
            resources:
              - pods
              - services
            verbs:
              - get
              - list
              - watch

  ## RoleBinding configuration
  ## @default -- See below
  ## @skip common-res.RoleBinding
  ##
  RoleBinding:
    enabled: true
    items:
      _:
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: '{{ include "common-gitops.names.release" . }}'
        subjects:
          - kind: ServiceAccount
            name: '{{ include "common-gitops.names.release" . }}'
            namespace: '{{ .Release.Namespace }}'

  ## Configure the services for the chart here.
  ## Additional services can be added by adding a dictionary key similar to the 'main' service.
  ## @default -- See below
  Service:
    ## Service configuration for main pod
    ##
    items:
      _:
        ## @param common-res.Service.items._.enabled Enables or disables the service
        ##
        enabled: true
        spec:
          ## @param common-res.Service.items._.spec.selector Additional selectors
          ##
          selector: {}

          ## @param common-res.Service.items._.spec.type Set the service type
          # Options: Simple(Loadbalancer), LoadBalancer, ClusterIP, NodePort
          ##
          type: ClusterIP

          ## @param common-res.Service.items._.spec.ipFamilyPolicy Specify the ip policy. Options: SingleStack, PreferDualStack, RequireDualStack
          ##
          ipFamilyPolicy: SingleStack

          ## Configure the Service port information here.
          ## Additional ports can be added by adding a dictionary key similar to the 'http' service.
          ## @default -- See below
          ##
          ports:
            ## @param common-res.Service.items._.spec.ports[0].name The port number
            ##
            - name: http
              ## @param common-res.Service.items._.spec.ports[0].port The port number
              ##
              port: 8080

              ## @param common-res.Service.items._.spec.ports[0].protocol Port protocol. Allowed values: `TCP`, `SCTP` or `UDP`.
              ##
              protocol: TCP

              ## @param common-res.Service.items._.spec.ports[0].targetPort Specify a service targetPort if you wish to differ the service port from the application port.
              ## If `targetPort` is specified, this port number is used in the container definition instead of
              ## the `port` value. Therefore named ports are not supported for this field.
              ##
              targetPort: 8080
