---
## @section Global parameters
## Global parameters
## These variables are accessible to all dependency helm charts.
##

global:
  ## @param global.chartNameOverride Overrides the chart name.
  ##
  chartNameOverride: ""
  ## @param global.releaseNameOverride Overrides the release name.
  ##
  releaseNameOverride: ""
  ## @param global.tags Define common tags for all IAC and app resources generated by this chart.
  ##
  tags: {}
  ## @param global.labels Define common labels for all IAC and app resources generated by this chart.
  ##
  labels: {}
  ## @param global.annotations Define common annotations for all IAC and app resources generated by this chart.
  ##
  annotations: {}
  ## @param global.awsAccountId Default aws account id for crossplane aws provider resources. Quotes are important, value must be a string.
  ##
  awsAccountId: "0123456789"
  ## @param global.awsRegion Default aws region for crossplane aws provider resources.
  ##
  awsRegion: us-east-2
  ## @param global.providerConfigRef.name Default crossplane provider all resources generated for crossplane.
  ##
  providerConfigRef:
    name: crossplane-provider-config-aws
  ## @param global.secretStoreRef External secrets secrets store ref
  ##
  secretStoreRef: 'cluster-secret-store-aws'
  ## @param global.environment Application environment
  ##
  environment: 'dev'

## @section Chatbot UI configurations
##

common-res:
  ## @param common-res.enabled Toggle for enabling or disabling chatbot ui resources.
  ##
  enabled: true
  Deployment:
    items:
      _:
        ## @param common-res.Deployment.items._.replicas Number of desired pods. Disable this if HPA is enabled
        ##
        replicas: 1
        ## @param common-res.Deployment.items._.revisionHistoryLimit ReplicaSet revision history limit
        ##
        revisionHistoryLimit: 3
        strategy:
          ## @param common-res.Deployment.items._.strategy.type Set the controller upgrade strategy
          ## For Deployments, valid values are Recreate (default) and RollingUpdate.
          ##
          type: "RollingUpdate"
          ## RollingUpdate strategy configuration
          ##
          rollingUpdate:
            ## @param common-res.Deployment.items._.strategy.rollingUpdate.maxUnavailable Set deployment RollingUpdate max unavailable
            ##
            maxUnavailable: "66%"
            ## @param common-res.Deployment.items._.strategy.rollingUpdate.maxSurge Set deployment RollingUpdate max surge
            ##
            maxSurge: "33%"
        ## @param common-res.Deployment.items._.selector Additional selectors for the deployment
        ##
        selector: {}
        ## Pod spec template (to generate spec.template)
        ##
        podSpec:
          spec:
            ## @param common-res.Deployment.items._.podSpec.spec.automountServiceAccountToken Automount Service account token
            ##
            automountServiceAccountToken: false
            ## @param common-res.Deployment.items._.podSpec.spec.restartPolicy Restart policy for the pod
            restartPolicy: Always
            ## Configure the Security Context for the Pod
            securityContext:
              ## @param common-res.Deployment.items._.podSpec.spec.securityContext.fsGroup Specify the default fs group id
              ##
              fsGroup: 1000
              ## @param common-res.Deployment.items._.podSpec.spec.securityContext.supplementalGroups Specify the additional groups
              ##
              supplementalGroups: []
              ## @param common-res.Deployment.items._.podSpec.spec.securityContext.fsGroupChangePolicy Specify the default gs group change policy
              ##
              fsGroupChangePolicy: OnRootMismatch
            ## Containers configuration
            containers:
              ## @param common-res.Deployment.items._.podSpec.spec.containers[0].name
              ##
              - name: chabot-ui
                ## @param common-res.Deployment.items._.podSpec.spec.containers[0].image
                ##
                image: sameerbagwe/chatbot-ui:latest
                ## @param common-res.Deployment.items._.podSpec.spec.containers[0].imagePullPolicy Container image pullPolicy. Allowed values: `IfNotPresent`, `Always`, `Never`
                ##
                imagePullPolicy: Always
                ## @param common-res.Deployment.items._.podSpec.spec.containers[0].tty Determines whether containers in a pod runs with TTY enabled.
                ##
                tty: false
                ## @param common-res.Deployment.items._.podSpec.spec.containers[0].stdin Determines whether containers in a pod runs with stdin enabled.
                ##
                stdin: false
                    ## Configure the Service port information here.
                ## Container ports configuration
                ##
                ports:
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].ports[0].name Name of the port
                  ##
                  - name: http
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].ports[0].containerPort The port number
                    ##
                    containerPort: 3000

                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].ports[0].protocol Port protocol. Allowed values: "SCTP", `TCP` and `UDP`.
                    ##
                    protocol: TCP
                ## Default Volume mounts
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[0].name
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[0].mountPath
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[0].readOnly
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[1].name
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[1].mountPath
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[1].readOnly
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[2].name
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[2].mountPath
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[2].readOnly
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[3].name
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[3].mountPath
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[3].readOnly
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[4].name
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[4].mountPath
                ## @skip common-res.Deployment.items._.podSpec.spec.containers[0].volumeMounts[4].readOnly
                ##
                volumeMounts:
                  - name: devshm
                    mountPath: /dev/shm
                    readOnly: false
                  - name: shared
                    mountPath: /shared
                    readOnly: false
                  - name: appdata
                    mountPath: /home/node
                    readOnly: false
                  - name: tmp
                    mountPath: /tmp
                    readOnly: false
                  - name: varrun
                    mountPath: /var/run
                    readOnly: false
                ## Liveness probe configuration
                ##
                livenessProbe:
                  httpGet:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.httpGet.port Liveness probe port
                    ##
                    port: 3000
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.httpGet.scheme Liveness probe connection protocol
                    ##
                    scheme: HTTP
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.httpGet.path If a HTTP probe is used (default for HTTP/HTTPS services) this path is used
                    ##
                    path: "/"
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.initialDelaySeconds Initial delay in seconds
                  ##
                  initialDelaySeconds: 10
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.periodSeconds period in seconds
                  ##
                  periodSeconds: 10
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.timeoutSeconds Timeout in seconds
                  ##
                  timeoutSeconds: 5
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.failureThreshold max number of failures in a row for flagging pod as unhealthy
                  ##
                  failureThreshold: 5
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].livenessProbe.successThreshold max number of successes in a row for flagging pod as healthy
                  ##
                  successThreshold: 1
                ## Readiness probe configuration
                ##
                readinessProbe:
                  httpGet:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.httpGet.port readiness probe port
                    ##
                    port: 3000
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.httpGet.scheme readiness probe connection protocol
                    ##
                    scheme: HTTP
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.httpGet.path If a HTTP probe is used (default for HTTP/HTTPS services) this path is used
                    ##
                    path: "/"
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.initialDelaySeconds Initial delay in seconds
                  ##
                  initialDelaySeconds: 10
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.periodSeconds period in seconds
                  ##
                  periodSeconds: 10
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.timeoutSeconds Timeout in seconds
                  ##
                  timeoutSeconds: 5
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.failureThreshold max number of failures in a row for flagging pod as not ready
                  ##
                  failureThreshold: 5
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].readinessProbe.successThreshold max number of successes in a row for flagging pod as ready
                  ##
                  successThreshold: 2
                ## Startup probe configuration
                ##
                startupProbe:
                  tcpSocket:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.tcpSocket.port startup probe port
                    ##
                    port: 3000
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.initialDelaySeconds Initial delay in seconds
                  ##
                  initialDelaySeconds: 10
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.periodSeconds period in seconds
                  ##
                  periodSeconds: 5
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.timeoutSeconds Timeout in seconds
                  ##
                  timeoutSeconds: 2
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.failureThreshold max number of failures in a row for flagging pod as not started
                  ##
                  failureThreshold: 60
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].startupProbe.successThreshold max number of successes in a row for flagging pod as started
                  ##
                  successThreshold: 1
                ## Set the resource requests / limits for the main container.
                ##
                resources:
                  ## Resource limits configuration
                  ##
                  limits:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].resources.limits.cpu CPU limits
                    ##
                    cpu: "1"
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].resources.limits.memory Memory limits
                    ##
                    memory: 512Mi
                  ## Resource Requests configurations
                  ##
                  requests:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].resources.requests.cpu CPU requests
                    ##
                    cpu: "70m"
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].resources.requests.memory Memory requests
                    ##
                    memory: "277Mi"
                ## Security context configuration
                ##
                securityContext:
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.runAsGroup Specify the default user group id
                  ##
                  runAsGroup: 1000
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.runAsUser Specify the default user id
                  ##
                  runAsUser: 1000
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.privileged Privileged mode true or false. Allowed values: `true` or `false`
                  ##
                  privileged: false
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.readOnlyRootFilesystem Access level for the file system.  Allowed values: `true` or `false`
                  ##
                  readOnlyRootFilesystem: true
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.allowPrivilegeEscalation Allow escalation of privileges true or false. Allowed values: `true` or `false`
                  ##
                  allowPrivilegeEscalation: false
                  ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.runAsNonRoot Run the process as root, true or false. Allowed values: `true` or `false`
                  ##
                  runAsNonRoot: true
                  seccompProfile:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.seccompProfile.type Seccomp profile type
                    ##
                    type: RuntimeDefault
                  ## Linux pod capabilities configurations
                  ## https://man7.org/linux/man-pages/man7/capabilities.7.html
                  ##
                  capabilities:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.capabilities.drop Capabilities to drop
                    ##
                    drop:
                      - ALL
                    ## @param common-res.Deployment.items._.podSpec.spec.containers[0].securityContext.capabilities.add Capabilities to add
                    ##
                    add: []
                ## Env configuration
                ## @param common-res.Deployment.items._.podSpec.spec.containers[0].envFrom[0].configMapRef.name ConfigMap name Ref
                ## @param common-res.Deployment.items._.podSpec.spec.containers[0].envFrom[1].secretRef.name Secret name Ref
                ##
                envFrom:
                  - configMapRef:
                      name: '{{ include "common-gitops.names.release" . }}'
                  - secretRef:
                      name: '{{ include "common-gitops.names.release" . }}'
            ## Pod Volumes configuration
            ## @skip common-res.Deployment.items._.podSpec.spec.volumes[0].name
            ## @skip common-res.Deployment.items._.podSpec.spec.volumes[0].emptyDir.medium
            ## @skip common-res.Deployment.items._.podSpec.spec.volumes[1].name
            ## @skip common-res.Deployment.items._.podSpec.spec.volumes[1].emptyDir.medium
            ## @skip common-res.Deployment.items._.podSpec.spec.volumes[2].name
            ## @skip common-res.Deployment.items._.podSpec.spec.volumes[2].emptyDir
            ## @skip common-res.Deployment.items._.podSpec.spec.volumes[3].name
            ## @skip common-res.Deployment.items._.podSpec.spec.volumes[3].emptyDir
            ## @skip common-res.Deployment.items._.podSpec.spec.volumes[4].name
            ## @skip common-res.Deployment.items._.podSpec.spec.volumes[4].emptyDir
            volumes:
              - name: devshm
                emptyDir:
                  medium: Memory
              - name: varrun
                emptyDir:
                  medium: Memory
              - name: shared
                emptyDir: {}
              - name: tmp
                emptyDir: {}
              - name: appdata
                emptyDir: {}

  ## Serviceaccount configuration
  ## @default -- See below
  ##
  ServiceAccount:
    ## ServiceAccount configuration for main pod
    ##
    items:
      _:
        ## @param common-res.ServiceAccount.items._.enabled Specifies whether a service account should be created. Allowed values: `true` or `false`
        ##
        enabled: true

  ## Create secret objects directly from dict.
  ##
  Secret:
    ## @param common-res.Secret.enabled Enable or Disable the secret from being created. Allowed values: `true` or `false`
    ##
    enabled: true

    ## Chatbot UI Secret. Use this secret if you are not using external-secrets addon to fetch secret
    ##
    items:
      _:
        stringData:
          ## @param common-res.Secret.items._.stringData.OPENAI_API_KEY OpenAI backend endpoint URL
          ## Ref: https://platform.openai.com/account/api-keys
          ##
          OPENAI_API_KEY: "YOUR_OPENAI_API_KEY"
          ## @param common-res.Secret.items._.stringData.OPENAI_ORGANIZATION OpenAI Org ID
          ## Ref: https://platform.openai.com/account/org-settings
          ##
          OPENAI_ORGANIZATION: "YOUR_OPENAI_ORGANIZATION_ID"
          ## @param common-res.Secret.items._.stringData.AZURE_DEPLOYMENT_ID
          ## Ref: https://learn.microsoft.com/en-us/azure/ai-services/openai/reference#completions
          ##
          AZURE_DEPLOYMENT_ID: ""
          ## @param common-res.Secret.items._.stringData.GOOGLE_API_KEY Google API key
          ## Ref: https://developers.google.com/custom-search/v1/overview#api_key
          ##
          GOOGLE_API_KEY: ""
          ## @param common-res.Secret.items._.stringData.GOOGLE_CSE_ID Google Search Engine ID
          ## Ref: https://developers.google.com/custom-search/v1/overview#search_engine_id
          ##
          GOOGLE_CSE_ID: ""

  ## Configure configMaps for the chart here.
  ##
  ConfigMap:
    ## @param common-res.ConfigMap.enabled Enable or Disable the configmap from being created. Allowed values: `true` or `false`
    ##
    enabled: true
    ## Chatbot UI config variables
    ##
    items:
      _:
        data:
          ## @param common-res.ConfigMap.items._.data.OPENAI_API_HOST OpenAI API Host
          ## For azure use: https://<endpoint>.openai.azure.com
          ##
          OPENAI_API_HOST: "https://api.openai.com"
          ## @param common-res.ConfigMap.items._.data.OPENAI_API_TYPE Allowed values: `openai` or `azure`
          ##
          OPENAI_API_TYPE: "openai"
          ## @param common-res.ConfigMap.items._.data.OPENAI_API_VERSION OpenAI API Version for Azure deployment. Only applicable for Azure OpenAI
          ##
          OPENAI_API_VERSION: "" # 2023-03-15-preview
          ## @param common-res.ConfigMap.items._.data.DEFAULT_MODEL The default model to use on new conversations, for Azure use gpt-35-turbo
          ##
          DEFAULT_MODEL: "gpt-3.5-turbo"
          ## @param common-res.ConfigMap.items._.data.NEXT_PUBLIC_DEFAULT_SYSTEM_PROMPT OpenAI System prompt
          ##
          NEXT_PUBLIC_DEFAULT_SYSTEM_PROMPT: "You are ChatGPT, a large language model trained by OpenAI. Follow the user's instructions carefully. Respond using markdown."
          ## @param common-res.ConfigMap.items._.data.NEXT_PUBLIC_DEFAULT_TEMPERATURE The default temperature to use on new conversations
          ## Use -1 for fun ;-)
          NEXT_PUBLIC_DEFAULT_TEMPERATURE: "1"

  ## Configure the services for the chart here.
  ## Additional services can be added by adding a dictionary key similar to the 'main' service.
  ## @default -- See below
  Service:
    ## Service configuration for main pod
    ##
    items:
      _:
        ## @param common-res.Service.items._.enabled Enables or disables the service
        ##
        enabled: true
        spec:
          ## @param common-res.Service.items._.spec.selector Additional selectors
          ##
          selector: {}

          ## @param common-res.Service.items._.spec.type Set the service type
          # Options: Simple(Loadbalancer), LoadBalancer, ClusterIP, NodePort
          ##
          type: ClusterIP

          ## @param common-res.Service.items._.spec.ipFamilyPolicy Specify the ip policy. Options: SingleStack, PreferDualStack, RequireDualStack
          ##
          ipFamilyPolicy: SingleStack

          ## Configure the Service port information here.
          ## Additional ports can be added by adding a dictionary key similar to the 'http' service.
          ## @default -- See below
          ##
          ports:
            ## @param common-res.Service.items._.spec.ports[0].name The port number
            ##
            - name: http
              ## @param common-res.Service.items._.spec.ports[0].port The port number
              ##
              port: 3000

              ## @param common-res.Service.items._.spec.ports[0].protocol Port protocol. Allowed values: `TCP`, `SCTP` or `UDP`.
              ##
              protocol: TCP

              ## @param common-res.Service.items._.spec.ports[0].targetPort Specify a service targetPort if you wish to differ the service port from the application port.
              ## If `targetPort` is specified, this port number is used in the container definition instead of
              ## the `port` value. Therefore named ports are not supported for this field.
              ##
              targetPort: 3000

  ## Configure the ingresses for the chart here.
  ## Additional ingresses can be added by adding a dictionary key similar to the 'main' ingress.
  ## @default -- See below
  ##
  Ingress:
    ## @param common-res.Ingress.enabled Enable or disable the ingress
    ##
    enabled: true
    ## Configure the main ingress for main deployment service
    ##
    items:
      _:
        ## Provide additional annotations which may be required.
        ##
        annotations:
          # cert-manager.io/acme-challenge-type: dns01
          # cert-manager.io/acme-dns01-provider: route53
          # cert-manager.io/cluster-issuer: my-domain-cluster-issuer
          # kubernetes.io/tls-acme: "true"
          ## @param common-res.Ingress.items._.annotations.kubernetes.io/ingress.allow-http Enable or disable non ssl connection on the ingress
          kubernetes.io/ingress.allow-http: "false"
          ## @param common-res.Ingress.items._.annotations.nginx.ingress.kubernetes.io/backend-protocol Backend protocol. Must match with backend service protocol
          nginx.ingress.kubernetes.io/backend-protocol: HTTP
          ## @param common-res.Ingress.items._.annotations.nginx.ingress.kubernetes.io/preserve-trailing-slash Enable or disable preservation of trailing slash
          nginx.ingress.kubernetes.io/preserve-trailing-slash: "false"
          ## @param common-res.Ingress.items._.annotations.nginx.ingress.kubernetes.io/server-snippet Additional nginx configurations using server-snippet annotation
          nginx.ingress.kubernetes.io/server-snippet: |
            proxy_ssl_verify off;
            proxy_set_header X-Forwarded-Proto https;
          ## @param common-res.Ingress.items._.annotations.nginx.ingress.kubernetes.io/ssl-redirect Enable or disable redirecting users from non ssl to ssl URL
          nginx.ingress.kubernetes.io/ssl-redirect: "true"

        ## @param common-res.Ingress.items._.labels Set labels on the deployment
        # -- Provide additional labels which may be required.
        ##
        labels: {}
        spec:
          ## @param common-res.Ingress.items._.spec.ingressClassName Set the ingressClass that is used for this ingress.
          ## Requires Kubernetes >=1.19
          ##
          ingressClassName: "" # "nginx"

          ## Configure the hosts for the ingress
          ##
          rules:
            ## @param common-res.Ingress.items._.spec.rules[0].host Host address. Helm template can be passed.
            ##
            - host: chatbot-ui.dnsname.local
              ## Configure the paths for the host
              ##
              http:
                paths:
                  ## @param common-res.Ingress.items._.spec.rules[0].http.paths[0].path Path.  Helm template can be passed.
                  ##
                  - path: /
                    ## @param common-res.Ingress.items._.spec.rules[0].http.paths[0].pathType Ignored if not kubeVersion >= 1.14-0
                    ##
                    pathType: Prefix
                    ## Service configuration for the host
                    ##
                    backend:
                      service:
                        ## @param common-res.Ingress.items._.spec.rules[0].http.paths[0].backend.service.name Overrides the service name reference for this path
                        ##
                        name: '{{ include "common-gitops.names.release" . }}'
                        ## @param common-res.Ingress.items._.spec.rules[0].http.paths[0].backend.service.port.number Overrides the service port reference for this path
                        ##
                        port:
                          number: 3000

          ## Configure TLS for the ingress. Both secretName and hosts can process a Helm template.
          ## @param common-res.Ingress.items._.spec.tls[0].secretName Name of the tls secret to use
          ## @param common-res.Ingress.items._.spec.tls[0].hosts List of virtual hosts to match
          ##
          tls:
            - secretName: tls-chatbot-ui.dnsname.local
              hosts:
                - chatbot-ui.dnsname.local

  ## HPA configuration
  ##
  HorizontalPodAutoscaler:
    ## @param common-res.HorizontalPodAutoscaler.enabled Toggle for enabling or disabling template.
    ##
    enabled: false
    ## Main deployment HPA settings
    ##
    items:
      _:
        spec:
          ## Scale Target
          ##
          scaleTargetRef:
            ## @param common-res.HorizontalPodAutoscaler.items._.spec.scaleTargetRef.apiVersion Target kind API Version
            ##
            apiVersion: apps/v1
            ## @param common-res.HorizontalPodAutoscaler.items._.spec.scaleTargetRef.kind Target kind
            ##
            kind: Deployment
            ## @param common-res.HorizontalPodAutoscaler.items._.spec.scaleTargetRef.name Target kind name
            ##
            name: '{{ include "common-gitops.names.release" . }}'
          ## @param common-res.HorizontalPodAutoscaler.items._.spec.minReplicas minimum amount of replica's to spawn
          ## default -- 1
          ##
          minReplicas: "1"
          ## @param common-res.HorizontalPodAutoscaler.items._.spec.maxReplicas maximum amount of replica's to spawn
          ## default -- 10
          ##
          maxReplicas: "10"
          ## Target metrics
          ##
          metrics:
            ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].type Metrics type
            ##
            - type: Resource
              resource:
                ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].resource.name resource name of the metric
                ##
                name: cpu
                target:
                  ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].resource.target.type Metric target type for the resource
                  ##
                  type: Utilization
                  ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].resource.target.averageUtilization Average utilization value
                  ##
                  averageUtilization: 80
            ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[1].type Metrics type
            ##
            - type: Resource
              resource:
                ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[1].resource.name resource name of the metric
                ##
                name: memory
                target:
                  ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[1].resource.target.type Metric target type for the resource
                  ##
                  type: Utilization
                  ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[1].resource.target.averageUtilization Average utilization value
                  ##
                  averageUtilization: 80

## @section Dependency: external-secrets upstream helm chart parameters for generating image pull secrets and other secrets for the app
##

external-secrets:
  ## @param external-secrets.enabled Toggle for enabling or disabling upstream chart templates.
  ##
  enabled: false

  ## Fetch image pull secrets and chatbot API key from the AWS secrets
  ## External secret resource for AWS secrets Manager secrets.
  ##
  AWSExternalSecret:
    ## @param external-secrets.AWSExternalSecret.enabled Toggle for enabling or disabling resource type.
    ##
    enabled: true
    items:
      _:
        ## @param external-secrets.AWSExternalSecret.items._.name Name of the secret to generate
        ##
        name: '{{ include "common-gitops.names.release" . }}'
        ## @param external-secrets.AWSExternalSecret.items._.namespace Target namespace for the generated secret
        ##
        namespace: '{{ .Release.Namespace }}'
        source:
          secretStoreRef:
            ## @param external-secrets.AWSExternalSecret.items._.source.secretStoreRef.name Name of the external secretstore for AWS to fetch secrets data
            ##
            name: '{{ .Values.global.secretStoreRef }}'
          data:
            OPENAI_API_KEY:
              ## @param external-secrets.AWSExternalSecret.items._.source.data.OPENAI_API_KEY.awsSecretName AWS Secrets manager secret name
              ##
              awsSecretName: '{{ .Values.global.environment }}-{{ include "common-gitops.names.release" . }}'
              ## @param external-secrets.AWSExternalSecret.items._.source.data.OPENAI_API_KEY.awsSecretKey Data key inside the AWS Secrets manager secret
              ##
              awsSecretKey: OPENAI_API_KEY
            OPENAI_ORGANIZATION:
              ## @param external-secrets.AWSExternalSecret.items._.source.data.OPENAI_ORGANIZATION.awsSecretName AWS Secrets manager secret name
              ##
              awsSecretName: '{{ .Values.global.environment }}-{{ include "common-gitops.names.release" . }}'
              ## @param external-secrets.AWSExternalSecret.items._.source.data.OPENAI_ORGANIZATION.awsSecretKey Data key inside the AWS Secrets manager secret
              ##
              awsSecretKey: OPENAI_ORGANIZATION

## @section Dependency: crossplane-aws-secretsmanager upstream helm chart parameters for generating image pull secrets and other secrets for the app
##
crossplane-aws-secretsmanager:
  ## @param crossplane-aws-secretsmanager.enabled Toggle for enabling or disabling upstream chart templates.
  ##
  enabled: false
  Secret:
    items:
      _:
        annotations:
          ## @param crossplane-aws-secretsmanager.Secret.items._.annotations.crossplane.io/external-name External name of the AWS Secret. Used for importing existing secret and avoid creating a new one
          ##
          crossplane.io/external-name: '{{ .Values.global.environment }}-{{ include "common-gitops.names.release" . }}'
        ## @param crossplane-aws-secretsmanager.Secret.items._.apiVersion Crossplane AWS provider apiVersion for AWS Secrets Secret object
        ##
        apiVersion: secretsmanager.aws.upbound.io/v1beta1
        ## @param crossplane-aws-secretsmanager.Secret.items._.name Name override for the secrets object visible to crossplane provider
        ##
        name: '{{ .Values.global.environment }}-{{ include "common-gitops.names.release" . }}'
        forProvider:
          ## @param crossplane-aws-secretsmanager.Secret.items._.forProvider.name Secret name in the AWS Secrets Manager
          ##
          name: '{{ .Values.global.environment }}-{{ include "common-gitops.names.release" . }}'
          ## @param crossplane-aws-secretsmanager.Secret.items._.forProvider.description Secret description in the AWS Secrets Manager
          ##
          description: "Chatbot UI Secrets"
