---
## @section Global parameters
## Global parameters
## These variables are accessible to all dependency helm charts.
##

global:
  ## @param global.chartNameOverride Overrides the chart name.
  ##
  chartNameOverride: ""
  ## @param global.releaseNameOverride Overrides the release name.
  ##
  releaseNameOverride: ""
  ## @param global.tags Define common tags for all IAC and app resources generated by this chart.
  ##
  tags: {}
  ## @param global.labels Define common labels for all IAC and app resources generated by this chart.
  ##
  labels: {}
  ## @param global.annotations Define common annotations for all IAC and app resources generated by this chart.
  ##
  annotations: {}
  ## @param global.providerConfigRef.name Default crossplane provider all resources generated for crossplane.
  ##
  providerConfigRef:
    name: aws-0123456789
  ## @param global.awsAccountId Default aws account id for crossplane aws provider resources. Quotes are important, value must be a string.
  ##
  awsAccountId: "0123456789"
  ## @param global.awsRegion Default aws region for crossplane aws provider resources.
  ##
  awsRegion: us-west-2
  ## @param global.eksHash Default EKS cluster hash for relevant crossplane resources such as IAM Role.
  ##
  eksHash: "XXXXX"
  ## @param global.deploymentName Deployment name for the app.
  ##
  deploymentName: cert-issuer
  ## @param global.team Team.
  ##
  team: test
  ## @param global.environment Environment.
  ##
  environment: dev
  ## @param global.zoneAwsAccountId Default allowed record names.
  ##
  zoneAwsAccountId: "0123456789"
  ## @param global.zoneRoleName Role that has access to the zone in the target account.
  ##
  zoneRoleName: "role-name"
  ## @param global.zoneAwsRegion Aws region where zone is hosted.
  ##
  zoneAwsRegion: "us-west-2"
  ## @param global.zoneName Zone name to be managed.
  ##
  zoneName: "example.com"
  ## @param global.letsencryptServer ServerURL used by Letsencrypt.
  ##
  letsencryptServer: "https://acme-v02.api.letsencrypt.org/directory"
  ## @param global.letsencryptAdminEmail Admin email used by Letsencrypt.
  ##
  letsencryptAdminEmail: "test@example.com"


## @section AWS IAM configurations
##
## @skip crossplane-aws-iam
crossplane-aws-iam:
  enabled: false
  Policy:
    items:
      _:
        forProvider:
          description: "IAM Policy external-dns to manage cross-account Route53 zone"
          policy:
            Statement:
              allowAssumeRoleInR53Account:
                Effect: "Allow"
                Action: "sts:AssumeRole"
                Resource: "arn:aws:iam::{{ .Values.global.zoneAwsAccountId }}:role/{{ .Values.global.zoneRoleName }}"
  Role:
    items:
      _:
        forProvider:
          assumeRolePolicy:
            Statement:
              allowAssumeRoleWebIdentity:
                Effect: Allow
                Action: sts:AssumeRoleWithWebIdentity
                Principal:
                  Federated: 'arn:aws:iam::{{ .Values.global.awsAccountId }}:oidc-provider/oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}'
                Condition:
                  StringEquals:
                    'oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}:sub': 'system:serviceaccount:{{ .Release.Namespace }}:external-dns-{{ .values.zoneName | replace "." "-" }}'
                    'oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}:aud': 'sts.amazonaws.com'
              allowEC2AssumeRole:
                Effect: Allow
                Principal:
                  Service: ec2.amazonaws.com
                Action: sts:AssumeRole
              allowSelfAssumeRole:
                Effect: Allow
                Principal:
                  AWS: '*'
                Action: sts:AssumeRole
                Condition:
                  ArnLike:
                    "aws:PrincipalArn": 'arn:aws:iam::{{ .Values.global.awsAccountId }}:role/{{ include "common-gitops.names.release" . }}'
  RolePolicyAttachment:
    items:
      _:
        forProvider:
          policyArnRef:
            name: '{{ include "common-gitops.names.release" . }}'
          roleRef:
            name: '{{ include "common-gitops.names.release" . }}'

## @section cert-manager's ClusterIssuer configuration
##
## @skip cert-manager
cert-manager:
  enabled: false
  ClusterIssuer:
    enabled: true
    items:
      _:
        name: '{{ .Values.global.zoneName| replace "." "-" }}'
        spec:
          acme:
            # The ACME server URL
            server: '{{ .Values.global.letsencryptServer }}'
            # Email address used for ACME registration
            email: '{{ .Values.global.letsencryptAdminEmail }}'
            privateKeySecretRef:
              name: '{{ .Values.global.team }}-{{ .Values.global.environment }}-{{ .Values.global.zoneName| replace "." "-" }}-pkc'
            solvers:
            - selector:
                dnsZones:
                - '{{ .Values.global.zoneName }}'
              dns01:
                route53:
                  region: '{{ .Values.global.zoneAwsRegion }}'
                  role: "arn:aws:iam::{{ .Values.global.zoneAwsAccountId }}:role/{{ .Values.global.zoneRoleName }}"

## @section external-dns basic configuration
##
## @skip external-dns
external-dns:
  enabled: false
  resources:
    limits:
      memory: "256Mi"
      cpu: "200m"
    requests:
      memory: "64Mi"
      cpu: "50m"
