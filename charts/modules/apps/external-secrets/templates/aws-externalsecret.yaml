{{- $kind := "AWSExternalSecret" -}}
{{- $root := . -}}
{{- $kindObj := or (get $root.Values $kind) (dict) -}}
{{- range $name, $item := $kindObj.items -}}
  {{- if eq (include "common-gitops.utils.itemEnabled" (dict "root" $root "name" $name "kind" $kind)) "true" }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "common-gitops.names.itemFullname" (dict "root" $root "name" $name "override" .name) }}
    {{- include "common-gitops.labels.standard" (dict "root" $root "name" $name "kind" $kind) | trim | nindent 2 }}
    {{- with .namespace }}
  namespace: {{ include "common-gitops.tplvalues.render" (dict "value" . "context" $root) }}
    {{- else }}
  namespace: {{ $root.Values.global.secretStoreNamespace }}
    {{- end }}
spec:
    {{- with .target }}
  target:
      {{- with .creationPolicy }}
    creationPolicy: {{ include "common-gitops.tplvalues.render" (dict "value" . "context" $root) }}
      {{- else }}
    creationPolicy: "Orphan"
      {{- end }}
      {{- with .deletionPolicy }}
    deletionPolicy: {{ include "common-gitops.tplvalues.render" (dict "value" . "context" $root)}}
      {{- else }}
    deletionPolicy: "Retain"
      {{- end }}
      {{- with .template }}
    template:
        {{- with .type }}
      type: {{ include "common-gitops.tplvalues.render" (dict "value" . "context" $root) }}
        {{- else }}
      type: "Opaque"
        {{- end }}
      engineVersion: v2
      metadata:
        {{- include "common-gitops.annotations" (dict "root" $root "name" $name "kind" $kind) | trim | nindent 8 }}
        {{- include "common-gitops.labels" (dict "root" $root "name" $name "kind" $kind) | trim | nindent 8 }}
        {{- with .data }}
      data:
          {{- range $targetSecretKey, $awsSecret := ($item.source).data }}
        {{ $targetSecretKey }}: "{{ "{{" }} .{{ $targetSecretKey }} {{ "}}" }}"
          {{- end }}
          {{- include "common-gitops.tplvalues.render" (dict "value" . "context" $root) | nindent 8 }}
        {{- end -}}
      {{- end -}}
    {{- end -}}
    {{- with .source }}
      {{- with .secretStoreRef }}
  secretStoreRef:
        {{- with .kind }}
    kind: {{ include "common-gitops.tplvalues.render" (dict "value" . "context" $root) }}
        {{- else }}
    kind: "ClusterSecretStore"
        {{- end }}
        {{- with .name }}
    name: {{ include "common-gitops.tplvalues.render" (dict "value" . "context" $root) }}
        {{- else }}
    name: {{ include "common-gitops.names.itemFullname" (dict "root" $root "name" $name) }}
        {{- end }}
      {{- end }}
      {{- with .data }}
  data:
        {{- range $targetSecretKey, $awsSecret := . }}
    - secretKey: {{ include "common-gitops.tplvalues.render" (dict "value" $targetSecretKey "context" $root) | quote }}
      remoteRef:
          {{- with .conversionStrategy }}
        conversionStrategy: {{ include "common-gitops.tplvalues.render" (dict "value" . "context" $root) }}
          {{- else }}
        conversionStrategy: Default
          {{- end -}}
          {{- with .decodingStrategy }}
        decodingStrategy: {{ include "common-gitops.tplvalues.render" (dict "value" . "context" $root) }}
          {{- else }}
        decodingStrategy: None
          {{- end }}
        key: {{ include "common-gitops.tplvalues.render" (dict "value" .awsSecretName "context" $root) | quote }}
          {{- with .metadataPolicy }}
        metadataPolicy: {{ include "common-gitops.tplvalues.render" (dict "value" . "context" $root) }}
          {{- else }}
        metadataPolicy: None
          {{- end }}
        property: {{ include "common-gitops.tplvalues.render" (dict "value" .awsSecretKey "context" $root) | quote }}
        {{- end }}
      {{- end }}
    {{- end }}
    {{- with .refreshInterval }}
  refreshInterval: {{ include "common-gitops.tplvalues.render" (dict "value" .refreshInterval "context" $root) }}
    {{- else }}
  refreshInterval: "1h"
    {{- end }}
  {{- end }}
{{- end }}
