---
## @section Global parameters
## Global parameters
## These variables are accessible to all dependency helm charts.
##

global:
  ## @param global.chartNameOverride Overrides the chart name.
  ##
  chartNameOverride: ""
  ## @param global.releaseNameOverride Overrides the release name.
  ##
  releaseNameOverride: ""
  ## @param global.tags Define common tags for all IAC and app resources generated by this chart.
  ##
  tags: {}
  ## @param global.labels Define common labels for all IAC and app resources generated by this chart.
  ##
  labels: {}
  ## @param global.annotations Define common annotations for all IAC and app resources generated by this chart.
  ##
  annotations: {}
  ## @param global.awsAccountId Default aws account id for crossplane aws provider resources. Quotes are important, value must be a string.
  ##
  awsAccountId: "0123456789"
  ## @param global.awsRegion Default aws region for crossplane aws provider resources.
  ##
  awsRegion: us-east-2
  ## @param global.eksHash Default EKS cluster hash for relevant crossplane resources such as IAM Role.
  ##
  eksHash: "XXXXX"
  ## @param global.providerConfigRef.name Default crossplane provider all resources generated for crossplane.
  ##
  providerConfigRef:
    name: aws-provider
  ## @param global.logLevel Set log level to 2 for normal mode and 6 for debug mode.
  logLevel: 6
  ## @param global.deploymentName Deployment name for the app.
  deploymentName: cert-manager

## @section cert-manager configurations
##
cert-manager:
  enabled: false
  fullnameOverride: cert-manager
  ingressShim:
    defaultIssuerName: default-cluster-issuer
    defaultIssuerKind: ClusterIssuer
  # NOTE: Use below extra args to reset ambient IAM creds usage when cert manager IAM role policy changes happen.
  # Trick is to enable extraargs, make sure cert manager pod restarts with new change and then disable it again
  # Note that cert manager do not work with the extraargs below, it is used only for resetting the ambient IAM creds
  # extraArgs:
  # - --cluster-issuer-ambient-credentials=false
  # We have to keep these settings in here because
  # boolean value is not supported in template fields
  installCRDs: true
  replicaCount: 1
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
  prometheus:
    enabled: false
    servicemonitor:
      enabled: false
      labels:
        release: monitoring

## @section Certificate configurations
##
Certificate:
  enabled: false

## @section CertificateRequest configurations
##
CertificateRequest:
  enabled: false

## @section ClusterIssuer configurations
##
ClusterIssuer:
  enabled: false

## @section Issuer configurations
##
Issuer:
  enabled: false

## @section AWS IAM configurations
##
crossplane-aws-iam:
  enabled: false
  Policy:
    items:
      _:
        forProvider:
          description: "IAM Policy for cert-manager to access r53 hostedzones"
          policy:
            Statement:
              allowR53getChange:
                Effect: Allow
                Action: route53:GetChange
                Resource: arn:aws:route53:::change/*
              allowRecordSets:
                Effect: Allow
                Action:
                  - route53:ChangeResourceRecordSets
                  - route53:ListResourceRecordSets
                Resource: arn:aws:route53:::hostedzone/*
              allowR53ListHostedZones:
                Effect: Allow
                Action: route53:ListHostedZonesByName
                Resource: '*'
  Role:
    items:
      _:
        forProvider:
          assumeRolePolicy:
            Statement:
              allowAssumeRoleWebIdentity:
                Effect: Allow
                Action: sts:AssumeRoleWithWebIdentity
                Principal:
                  Federated: 'arn:aws:iam::{{ .Values.global.awsAccountId }}:oidc-provider/oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}'
                Condition:
                  StringEquals:
                    'oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}:sub': 'system:serviceaccount:{{ .Release.Namespace }}:{{ .Values.global.deploymentName }}'
                    'oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}:aud': 'sts.amazonaws.com'
              allowEC2AssumeRole:
                Effect: Allow
                Principal:
                  Service: ec2.amazonaws.com
                Action: sts:AssumeRole
              allowSelfAssumeRole:
                Effect: Allow
                Principal:
                  AWS: '*'
                Action: sts:AssumeRole
                Condition:
                  ArnLike:
                    "aws:PrincipalArn": 'arn:aws:iam::{{ .Values.global.awsAccountId }}:role/{{ include "common-gitops.names.release" . }}'
  RolePolicyAttachment:
    items:
      _:
        forProvider:
          policyArnRef:
            name: '{{ include "common-gitops.names.release" . }}'
          roleRef:
            name: '{{ include "common-gitops.names.release" . }}'

## @skip crossplane-aws-iam.enabled
## @skip cert-manager.enabled
## @skip cert-manager.fullnameOverride
## @skip cert-manager.ingressShim.defaultIssuerName
## @skip cert-manager.ingressShim.defaultIssuerKind
## @skip cert-manager.installCRDs
## @skip cert-manager.replicaCount
## @skip cert-manager.containerSecurityContext.allowPrivilegeEscalation
## @skip cert-manager.containerSecurityContext.capabilities.drop
## @skip cert-manager.containerSecurityContext.readOnlyRootFilesystem
## @skip cert-manager.containerSecurityContext.runAsNonRoot
## @skip cert-manager.prometheus.enabled
## @skip cert-manager.prometheus.servicemonitor.enabled
## @skip cert-manager.prometheus.servicemonitor.labels.release
## @skip Certificate.enabled
## @skip CertificateRequest.enabled
## @skip ClusterIssuer.enabled
## @skip Issuer.enabled
## @skip crossplane-aws-iam.Policy.items._.forProvider.description
## @skip crossplane-aws-iam.Policy.items._.forProvider.policy.Statement.allowR53getChange.Effect
## @skip crossplane-aws-iam.Policy.items._.forProvider.policy.Statement.allowR53getChange.Action
## @skip crossplane-aws-iam.Policy.items._.forProvider.policy.Statement.allowR53getChange.Resource
## @skip crossplane-aws-iam.Policy.items._.forProvider.policy.Statement.allowRecordSets.Effect
## @skip crossplane-aws-iam.Policy.items._.forProvider.policy.Statement.allowRecordSets.Action
## @skip crossplane-aws-iam.Policy.items._.forProvider.policy.Statement.allowRecordSets.Resource
## @skip crossplane-aws-iam.Policy.items._.forProvider.policy.Statement.allowR53ListHostedZones.Effect
## @skip crossplane-aws-iam.Policy.items._.forProvider.policy.Statement.allowR53ListHostedZones.Action
## @skip crossplane-aws-iam.Policy.items._.forProvider.policy.Statement.allowR53ListHostedZones.Resource
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowAssumeRoleWebIdentity.Effect
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowAssumeRoleWebIdentity.Action
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowAssumeRoleWebIdentity.Principal.Federated
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowAssumeRoleWebIdentity.Condition.StringEquals.oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}:sub
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowAssumeRoleWebIdentity.Condition.StringEquals.oidc.eks.{{ .Values.global.awsRegion }}.amazonaws.com/id/{{ .Values.global.eksHash }}:aud
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowEC2AssumeRole.Effect
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowEC2AssumeRole.Principal.Service
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowEC2AssumeRole.Action
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowSelfAssumeRole.Effect
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowSelfAssumeRole.Principal.AWS
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowSelfAssumeRole.Action
## @skip crossplane-aws-iam.Role.items._.forProvider.assumeRolePolicy.Statement.allowSelfAssumeRole.Condition.ArnLike.aws:PrincipalArn
## @skip crossplane-aws-iam.RolePolicyAttachment.items._.forProvider.policyArnRef.name
## @skip crossplane-aws-iam.RolePolicyAttachment.items._.forProvider.roleRef.name
