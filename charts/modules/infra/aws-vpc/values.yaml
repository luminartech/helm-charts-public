---
## @section Global parameters
## Global parameters
## These variables are accessible to all dependency helm charts.
##

global:
  ## @param global.chartNameOverride Overrides the chart name.
  ##
  chartNameOverride: ""
  ## @param global.releaseNameOverride Overrides the release name.
  ##
  releaseNameOverride: ""
  ## @param global.tags Define common tags for all IAC and app resources generated by this chart.
  ##
  tags: {}
  ## @param global.labels Define common labels for all IAC and app resources generated by this chart.
  ##
  labels: {}
  ## @param global.annotations Define common annotations for all IAC and app resources generated by this chart.
  ##
  annotations: {}
  ## @param global.awsAccountId Default aws account id for crossplane aws provider resources. Quotes are important, value must be a string.
  ##
  awsAccountId: "0123456789"
  ## @param global.awsRegion Default aws region for crossplane aws provider resources.
  ##
  awsRegion: us-east-2
  ## @param global.providerConfigRef.name Default crossplane provider all resources generated for crossplane.
  ##
  providerConfigRef:
    name: crossplane-provider-config-aws
  ## @param global.transitGatewayIdRefName Transit gateway ID ref name for internal network routing.
  ##
  transitGatewayIdRefName: transit-gateway-id-name-known-to-crossplane
  ## @param global.transitGatewayProviderConfigRef Transit gateway aws provider for crossplane
  ##
  transitGatewayProviderConfigRef: transit-gateway-aws-provider-name
  ## @param global.awsDeletionPolicy Default crossplane deletion policy for all resources deployed by this helm chart..
  ## This can be overriden for each resource in its section
  awsDeletionPolicy: Orphan
  ## @param global.vpcCidr VPC CIDR. Using 10.0.0.0/16 or default CIDR provided by AWS is a bad idea.
  ## Check with your IT/Network team for the allocated/approved CIDR range for your account/network/project
  ## Default value is kept invalid on purpose to avoid deployment of VPC without declaring proper CIDR value
  vpcCidr: "0.0.0.0/20"

## @section Dependency: crossplane-aws-ec2 upstream helm chart parameters for creating VPC resources
## ref: https://github.com/luminartech/helm-charts-public/blob/main/charts/iac/crossplane-aws-ec2/values.yaml
##

crossplane-aws-ec2:
  ## @param crossplane-aws-ec2.enabled Toggle for enabling or disabling upstream chart templates.
  ##
  enabled: true

  ## AWS resources parameters.
  ## items: Dict of one or more resources of its kind.
  ## @skip crossplane-aws-ec2.EIP
  ## items._: Name of the resource in the kubernetes. "_" generates a default name as releaseName-object name
  ## ref: https://github.com/luminartech/helm-charts-public/blob/478ec718b93063f1eccfa591189ab0f59bf3fd1e/charts/shared/common-gitops/templates/_names.tpl#L50
  ##
  EIP:
    enabled: true
    items:
      nat-gateway:
        ## AWS Configuration for given resource.
        ## @skip crossplane-aws-ec2.EIP.items.nat-gateway.forProvider
        ##
        forProvider:
          vpc: true

  ## @skip crossplane-aws-ec2.VPC
  ##
  VPC:
    enabled: true
    items:
      _:
        forProvider:
          cidrBlock: '{{ .Values.global.vpcCidr }}'
          enableDnsSupport: true
          enableDnsHostnames: true

  ## @skip crossplane-aws-ec2.Subnet
  ##
  Subnet:
    enabled: true
    items:
      public-a:
        enabled: true
        labels:
          subnetType: public
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
          availabilityZone: '{{ .Values.global.awsRegion }}a'
          cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "0.0/24") }}'
          mapPublicIpOnLaunch: true
          tags:
            kubernetes.io/role/elb: "1"
      public-b:
        enabled: true
        labels:
          subnetType: public
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
          availabilityZone: "{{ .Values.global.awsRegion }}b"
          cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "1.0/24") }}'
          mapPublicIpOnLaunch: true
          tags:
            kubernetes.io/role/elb: "1"
      public-c:
        enabled: true
        labels:
          subnetType: public
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
          availabilityZone: "{{ .Values.global.awsRegion }}c"
          cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "2.0/24") }}'
          mapPublicIpOnLaunch: true
          tags:
            kubernetes.io/role/elb: "1"
      public-d:
        enabled: true
        labels:
          subnetType: public
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
          availabilityZone: "{{ .Values.global.awsRegion }}d"
          cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "3.0/24") }}'
          mapPublicIpOnLaunch: true
          tags:
            kubernetes.io/role/elb: "1"
      private-a:
        enabled: true
        labels:
          app.kubernetes.io/private: "true"
          subnetType: private
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
          availabilityZone: "{{ .Values.global.awsRegion }}a"
          cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "4.0/23") }}'
          mapPublicIpOnLaunch: false
          tags:
            kubernetes.io/role/internal-elb: "1"
      private-b:
        enabled: true
        labels:
          app.kubernetes.io/private: "true"
          subnetType: private
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
          availabilityZone: "{{ .Values.global.awsRegion }}b"
          cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "6.0/23") }}'
          mapPublicIpOnLaunch: false
          tags:
            kubernetes.io/role/internal-elb: "1"
      private-c:
        enabled: true
        labels:
          app.kubernetes.io/private: "true"
          subnetType: private
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
          availabilityZone: "{{ .Values.global.awsRegion }}c"
          cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "8.0/23") }}'
          mapPublicIpOnLaunch: false
          tags:
            kubernetes.io/role/internal-elb: "1"
      private-d:
        enabled: true
        labels:
          app.kubernetes.io/private: "true"
          subnetType: private
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
          availabilityZone: "{{ .Values.global.awsRegion }}d"
          cidrBlock: '{{ include "common-gitops.utils.subnetCidr" (dict "vpcCidr" .Values.global.vpcCidr "suffix" "10.0/23") }}'
          mapPublicIpOnLaunch: false
          tags:
            kubernetes.io/role/internal-elb: "1"

  ## @skip crossplane-aws-ec2.NATGateway
  ##
  NATGateway:
    enabled: true
    items:
      _:
        forProvider:
          allocationIdRef:
            name: '{{ include "common-gitops.names.release" . }}-nat-gateway'
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public-a'

  ## @skip crossplane-aws-ec2.InternetGateway
  ##
  InternetGateway:
    enabled: true
    items:
      _:
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'

  ## @skip crossplane-aws-ec2.RouteTable
  ##
  RouteTable:
    enabled: true
    items:
      private:
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
      public:
        forProvider:
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'

  ## @skip crossplane-aws-ec2.RouteTableAssociation
  ##
  RouteTableAssociation:
    enabled: true
    items:
      private-a:
        enabled: true
        forProvider:
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private'
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-a'
      private-b:
        enabled: true
        forProvider:
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private'
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-b'
      private-c:
        enabled: true
        forProvider:
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private'
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-c'
      private-d:
        enabled: true
        forProvider:
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private'
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-d'
      public-a:
        enabled: true
        forProvider:
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public'
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public-a'
      public-b:
        enabled: true
        forProvider:
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public'
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public-b'
      public-c:
        enabled: true
        forProvider:
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public'
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public-c'
      public-d:
        enabled: true
        forProvider:
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public'
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public-d'

  ## @skip crossplane-aws-ec2.Route
  ##
  Route:
    enabled: true
    items:
      private-default:
        deletionPolicy: Orphan
        forProvider:
          destinationCidrBlock: "0.0.0.0/0"
          natGatewayIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private'
      public-default:
        deletionPolicy: Orphan
        forProvider:
          destinationCidrBlock: "0.0.0.0/0"
          gatewayIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public'
      # # TGW Routing: us-east-2
      # us-east-2:
      #   forProvider:
      #     destinationCidrBlock: "10.x.x.x/xx"
      #     transitGatewayIdRef:
      #       name: '{{ .Values.global.transitGatewayIdRefName }}'
      #     routeTableIdRef:
      #       name: '{{ `{{ include "common-gitops.names.release" . }}` }}-private'

  ## @skip crossplane-aws-ec2.VPCEndpoint
  ##
  VPCEndpoint:
    enabled: false
    items:
      s3:
        enabled: false
        forProvider:
          vpcEndpointType: "Gateway"
          serviceName: "com.amazonaws.{{ .Values.global.awsRegion }}.s3"
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
      ecr-dkr:
        enabled: false
        forProvider:
          vpcEndpointType: "Interface"
          serviceName: "com.amazonaws.{{ .Values.global.awsRegion }}.ecr.dkr"
          privateDnsEnabled: true
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
      ecr-api:
        enabled: false
        forProvider:
          vpcEndpointType: "Interface"
          serviceName: "com.amazonaws.{{ .Values.global.awsRegion }}.ecr.api"
          privateDnsEnabled: true
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'

  ## @skip crossplane-aws-ec2.VPCEndpointSecurityGroupAssociation
  ##
  VPCEndpointSecurityGroupAssociation:
    enabled: false
    items:
      ecr-dkr:
        enabled: false
        forProvider:
          securityGroupIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-endpoint'
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-dkr'
      ecr-api:
        enabled: false
        forProvider:
          securityGroupIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-endpoint'
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-api'

  ## @skip crossplane-aws-ec2.VPCEndpointSubnetAssociation
  ##
  VPCEndpointSubnetAssociation:
    enabled: false
    items:
      ecr-dkr-private-a:
        enabled: false
        forProvider:
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-a'
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-dkr'
      ecr-dkr-private-b:
        enabled: false
        forProvider:
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-b'
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-dkr'
      ecr-dkr-private-c:
        enabled: false
        forProvider:
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-c'
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-dkr'
      ecr-dkr-private-d:
        enabled: false
        forProvider:
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-d'
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-dkr'
      ecr-api-private-a:
        enabled: false
        forProvider:
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-a'
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-api'
      ecr-api-private-b:
        enabled: false
        forProvider:
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-b'
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-api'
      ecr-api-private-c:
        enabled: false
        forProvider:
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-c'
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-api'
      ecr-api-private-d:
        enabled: false
        forProvider:
          subnetIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private-d'
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-api'

  ## @skip crossplane-aws-ec2.VPCEndpointRouteTableAssociation
  ##
  VPCEndpointRouteTableAssociation:
    enabled: false
    items:
      s3-private:
        enabled: false
        forProvider:
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-s3'
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-private'
      s3-public:
        enabled: false
        forProvider:
          vpcEndpointIdRef:
            name: '{{ include "common-gitops.names.release" . }}-s3'
          routeTableIdRef:
            name: '{{ include "common-gitops.names.release" . }}-public'

  ## @skip crossplane-aws-ec2.SecurityGroup
  ##
  SecurityGroup:
    enabled: false
    items:
      ecr-endpoint:
        enabled: false
        forProvider:
          description: "ECR VPC Endpoint security group"
          name: '{{ include "common-gitops.names.release" . }}-ecr-endpoint'
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'

  ## @skip crossplane-aws-ec2.SecurityGroupRule
  ##
  SecurityGroupRule:
    enabled: false
    items:
      ecr-endpoint-in:
        enabled: false
        forProvider:
          type: ingress
          protocol: tcp
          fromPort: 443
          toPort: 443
          description: "All VPC to ECR Endpoint"
          cidrBlocks:
            - '{{ .Values.global.vpcCidr }}'
          securityGroupIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-endpoint'
      ecr-endpoint-out:
        enabled: false
        forProvider:
          type: egress
          protocol: tcp
          fromPort: 443
          toPort: 443
          description: "All VPC to ECR Endpoint"
          cidrBlocks:
            - '{{ .Values.global.vpcCidr }}'
          securityGroupIdRef:
            name: '{{ include "common-gitops.names.release" . }}-ecr-endpoint'

  ## @skip crossplane-aws-ec2.TransitGatewayVPCAttachment
  ##
  TransitGatewayVPCAttachment:
    enabled: false
    items:
      _:
        forProvider:
          transitGatewayIdRef:
            name: "{{ .Values.global.transitGatewayIdRefName }}"
          applianceModeSupport: disable
          dnsSupport: enable
          ipv6Support: disable
          subnetIdSelector:
            matchLabels:
              app.kubernetes.io/part-of: '{{ include "common-gitops.names.release" . }}'
              subnetType: 'private'
          vpcIdRef:
            name: '{{ include "common-gitops.names.release" . }}'

  ## @skip crossplane-aws-ec2.TransitGatewayVPCAttachmentAccepter
  ##
  TransitGatewayVPCAttachmentAccepter:
    enabled: false
    items:
      _:
        providerConfigRef:
          name: "{{ .Values.global.transitGatewayProviderConfigRef }}"
        forProvider:
          transitGatewayAttachmentIdRef:
            name: '{{ include "common-gitops.names.release" . }}'
