# Ref: https://github.com/bitnami/charts/blob/main/.github/workflows/generate-chart-readme.yml
name: '[HELM] Package and release'
on:
  workflow_dispatch:
    inputs:
      chart-path:
        type: "string"
        description: "Helm chart relative dir path(s). e.g. charts/shared/common-gitops charts/shared/common-res "
        required: true
  push:
    branches:
      - main
    paths:
      # Create a release on version update
      - 'charts/**/Chart.yaml'
permissions:
  contents: write
jobs:
  package-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.SOFTWARE_APP_ID }}
          private_key: ${{ secrets.SOFTWARE_APP_PRIVATE_KEY }}
          installation_id: ${{ secrets.SOFTWARE_APP_INSTALLATION_ID }}
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0
          persist-credentials: true
          path: luminartech/helm-charts-public
      - name: Helm Repository Checkout
        uses: actions/checkout@v3
        with:
          repository: luminartech/helm-repo-public
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0
          persist-credentials: true
          ref: main
          path: luminartech/helm-repo-public
      - name: Helm Installation
        uses: azure/setup-helm@v3
        with:
          version: v3.10.3
      - name: Get list of changed directories
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          path: luminartech/helm-charts-public
          files: |
            charts/**
      - name: Build helm packages and push tags
        run: |
          [[ "${{ secrets.SCRIPT_DEBUG }}" == "1" ]] && set -x || true
          set -euo pipefail
          workspace_dir=$(pwd)
          cd luminartech/helm-charts-public
          git config user.name "CI Bot"
          git config user.email "sre@luminartech.com"
          chart_paths=(${{ inputs.chart-path }})
          mv_cmd_flags=""
          if [ ${#chart_paths[@]} -gt 0 ]; then
            echo "INFO: Doing a manual build and release for helm chart(s): ${{ inputs.chart-path }}"
            echo "INFO: This will overwrite old release if exists"
            charts_dirs_changed=("${chart_paths[@]}")
            mv_cmd_flags="-f"
          else
            # Adding || true to avoid "Process exited with code 1" errors
            charts_dirs_changed=($(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -e '^charts\/iac\/.*\/Chart.yaml' | xargs dirname | sed -nr "s|charts/iac/([^/]*).*|charts/iac/\1|p" | sort | uniq || true))
            charts_dirs_changed+=($(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -e '^charts\/shared\/.*\/Chart.yaml' | xargs dirname | sed -nr "s|charts/shared/([^/]*).*|charts/shared/\1|p" | uniq || true))
            charts_dirs_changed+=($(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -e '^charts\/modules\/apps\/.*\/Chart.yaml' | xargs dirname | sed -nr "s|charts/modules/apps/([^/]*).*|charts/modules/apps/\1|p" | sort | uniq || true))
            charts_dirs_changed+=($(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -e '^charts\/modules\/infra\/.*\/Chart.yaml' | xargs dirname | sed -nr "s|charts/modules/infra/([^/]*).*|charts/modules/infra/\1|p" | sort | uniq || true))
            charts_dirs_changed+=($(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -e '^charts\/modules\/iac\/.*\/Chart.yaml' | xargs dirname | sed -nr "s|charts/modules/iac/([^/]*).*|charts/modules/iac/\1|p" | sort | uniq || true))
          fi
          for chart in "${charts_dirs_changed[@]}"; do
            cd ${chart}
            if [ -f Chart.yaml ]; then
              echo "Generating helm package for ${chart}"
              helm dependency update
              rm -f *.tgz || true
              helm package .
              chart_name=$(awk -F '[/]' '{print $NF}' <<< ${chart})
              chart_version=$(ls -t|grep -e '.*-.*\..*\.tgz'|sed "s/.tgz//;s/${chart_name}-//")
              # this command should fail the job if tag already exists
              git tag rel-${chart_name}-${chart_version}
              git push origin rel-${chart_name}-${chart_version}
              mkdir -p ${workspace_dir}/luminartech/helm-repo-public/${chart_name}
              # We want this job to fail if same version package exists and workflow is runing on_push event
              # Overwrite only if workflow was triggered manually
              mv ${mv_cmd_flags} *.tgz "${workspace_dir}/luminartech/helm-repo-public/${chart_name}"
            else
              echo "WARN: Chart.yaml missing for ${chart}"
              exit 1
            fi
            cd -
          done
      - name: Push changes to helm repository
        run: |
          [[ "${{ secrets.SCRIPT_DEBUG }}" == "1" ]] && set -x || true
          # Push all the changes
          cd luminartech/helm-repo-public
          if git status --untracked-files=all | grep -e '.*-.*\..*\.tgz'; then
            git config user.name "CI Bot"
            git config user.email "sre@luminartech.com"
            git add **/*.tgz
            git status
            git commit -am "[ CI Bot ] Generated helm packages" --signoff
            git push
          fi
